{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"rec_MF","provenance":[],"authorship_tag":"ABX9TyO+mxw5djPLCiUvPNEJZGwm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ylqEJ7AsugJm"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["r_cols = ['user_id', 'movie_id', 'rating', 'timestamp']\n","ratings = pd.read_csv('u.data', names=r_cols,  sep='\\t',encoding='latin-1')\n","ratings = ratings[['user_id', 'movie_id', 'rating']].astype(int) "],"metadata":{"id":"RAlW4QZduq-E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_S_iMToVuurw","executionInfo":{"status":"ok","timestamp":1648169305510,"user_tz":-540,"elapsed":47,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"5e05fa0c-3e92-4a69-8f03-2f3b2d70c386"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       user_id  movie_id  rating\n","0          196       242       3\n","1          186       302       3\n","2           22       377       1\n","3          244        51       2\n","4          166       346       1\n","...        ...       ...     ...\n","99995      880       476       3\n","99996      716       204       5\n","99997      276      1090       1\n","99998       13       225       2\n","99999       12       203       3\n","\n","[100000 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-144ab71c-dbf2-4588-b064-f860e57bf358\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>196</td>\n","      <td>242</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>186</td>\n","      <td>302</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>22</td>\n","      <td>377</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>244</td>\n","      <td>51</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>166</td>\n","      <td>346</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>880</td>\n","      <td>476</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>716</td>\n","      <td>204</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>276</td>\n","      <td>1090</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>13</td>\n","      <td>225</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>12</td>\n","      <td>203</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-144ab71c-dbf2-4588-b064-f860e57bf358')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-144ab71c-dbf2-4588-b064-f860e57bf358 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-144ab71c-dbf2-4588-b064-f860e57bf358');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"6xpuCoxGuvQk","executionInfo":{"status":"ok","timestamp":1648169305511,"user_tz":-540,"elapsed":44,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"8a0590dd-595e-4f0b-a326-854f48594f9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_id  1     2     3     4     5     6     7     8     9     10    ...  \\\n","user_id                                                               ...   \n","1          5.0   3.0   4.0   3.0   3.0   5.0   4.0   1.0   5.0   3.0  ...   \n","2          4.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   2.0  ...   \n","3          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","4          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","5          4.0   3.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","...        ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  ...   \n","939        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   5.0   0.0  ...   \n","940        0.0   0.0   0.0   2.0   0.0   0.0   4.0   5.0   3.0   0.0  ...   \n","941        5.0   0.0   0.0   0.0   0.0   0.0   4.0   0.0   0.0   0.0  ...   \n","942        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","943        0.0   5.0   0.0   0.0   0.0   0.0   0.0   0.0   3.0   0.0  ...   \n","\n","movie_id  1673  1674  1675  1676  1677  1678  1679  1680  1681  1682  \n","user_id                                                               \n","1          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","2          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","3          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","4          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","5          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","...        ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  \n","939        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","940        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","941        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","942        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","943        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","\n","[943 rows x 1682 columns]"],"text/html":["\n","  <div id=\"df-4de4e540-11cf-4d1f-a7a0-be29c42f35f8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>movie_id</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>...</th>\n","      <th>1673</th>\n","      <th>1674</th>\n","      <th>1675</th>\n","      <th>1676</th>\n","      <th>1677</th>\n","      <th>1678</th>\n","      <th>1679</th>\n","      <th>1680</th>\n","      <th>1681</th>\n","      <th>1682</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>939</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>940</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>941</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>942</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>943</th>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>943 rows Ã— 1682 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4de4e540-11cf-4d1f-a7a0-be29c42f35f8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4de4e540-11cf-4d1f-a7a0-be29c42f35f8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4de4e540-11cf-4d1f-a7a0-be29c42f35f8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["np.random.normal(scale=1./30, size=(943, 30))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gG1dFCkcvF5o","executionInfo":{"status":"ok","timestamp":1648169305512,"user_tz":-540,"elapsed":41,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"bb98bc65-70f3-4986-ce64-5f97cdef4fac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.05027013, -0.02118021, -0.00272081, ..., -0.0480155 ,\n","        -0.00913898, -0.01555074],\n","       [-0.000806  ,  0.0129837 , -0.01987535, ..., -0.01557188,\n","        -0.040113  ,  0.06948245],\n","       [-0.05901495,  0.00299087,  0.0196103 , ..., -0.03128181,\n","         0.03508026,  0.04537303],\n","       ...,\n","       [-0.00048877,  0.01341982, -0.0577439 , ...,  0.06593256,\n","        -0.04034958,  0.03503875],\n","       [-0.07227136,  0.00279321,  0.02184658, ...,  0.03704133,\n","         0.02641364,  0.02270836],\n","       [-0.03290139, -0.06529622, -0.01277295, ..., -0.01660122,\n","         0.08123647, -0.01871392]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["np.zeros(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uVlJYMEJv_yX","executionInfo":{"status":"ok","timestamp":1648169306365,"user_tz":-540,"elapsed":883,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"65eb556b-9e56-414c-b5d5-6aa509b15c76"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["R = np.array(ratings)"],"metadata":{"id":"BDhbqVvBwPuz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["R\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E5oho4pjwWp_","executionInfo":{"status":"ok","timestamp":1648169306366,"user_tz":-540,"elapsed":9,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"8c1a200b-923d-467d-c4a6-e8afc84efdc3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 196,  242,    3],\n","       [ 186,  302,    3],\n","       [  22,  377,    1],\n","       ...,\n","       [ 276, 1090,    1],\n","       [  13,  225,    2],\n","       [  12,  203,    3]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["R_temp = ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)"],"metadata":{"id":"nuJVdBEGwYBv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.array(R_temp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"st2oc8Sgwbyb","executionInfo":{"status":"ok","timestamp":1648169306367,"user_tz":-540,"elapsed":8,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"b297f899-b12e-4249-9cc8-1d252fcd6428"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5., 3., 4., ..., 0., 0., 0.],\n","       [4., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       ...,\n","       [5., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 5., 0., ..., 0., 0., 0.]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["R.nonzero()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"STKQhk3UwdS0","executionInfo":{"status":"ok","timestamp":1648169306367,"user_tz":-540,"elapsed":6,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"11b5ade6-aa55-4ed9-b313-0c8b1c0a05b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([    0,     0,     0, ..., 99999, 99999, 99999]),\n"," array([0, 1, 2, ..., 0, 1, 2]))"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":[""],"metadata":{"id":"rCFnutMxwj2U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ìƒˆ ì„¹ì…˜"],"metadata":{"id":"fPoYydOGi2bi"}},{"cell_type":"code","source":["r_cols = ['user_id', 'movie_id', 'rating', 'timestamp']\n","ratings = pd.read_csv('u.data', names=r_cols,  sep='\\t',encoding='latin-1')\n","ratings = ratings[['user_id', 'movie_id', 'rating']].astype(int)            # timestamp ì œê±°\n","\n","\n","\n","class MF():\n","    def __init__(self, ratings, K, alpha, beta, iterations, verbose=True):\n","        self.R = np.array(ratings)\n","        self.num_users, self.num_items = np.shape(self.R)\n","        self.K = K\n","        self.alpha = alpha\n","        self.beta = beta\n","        self.iterations = iterations\n","        self.verbose = verbose\n","\n","    # Root Mean Squared Error (RMSE) ê³„ì‚°\n","    def rmse(self):\n","        xs, ys = self.R.nonzero()\n","        self.predictions = []\n","        self.errors = []\n","        for x, y in zip(xs, ys):\n","            prediction = self.get_prediction(x, y)\n","            self.predictions.append(prediction)\n","            self.errors.append(self.R[x, y] - prediction)\n","        self.predictions = np.array(self.predictions)\n","        self.errors = np.array(self.errors)\n","        return np.sqrt(np.mean(self.errors**2))\n","\n","    def train(self): \n","        # Initializing user-feature and item-feature matrix\n","        # loc(center)=0.0, scale: standard deviation (def=1), size=output shape\n","        self.P = np.random.normal(scale=1./self.K, size=(self.num_users, self.K))\n","        self.Q = np.random.normal(scale=1./self.K, size=(self.num_items, self.K))\n","\n","        # Initializing the bias terms\n","        self.b_u = np.zeros(self.num_users)\n","        self.b_d = np.zeros(self.num_items)\n","        self.b = np.mean(self.R[self.R.nonzero()])\n","\n","        # List of training samples\n","        rows, columns = self.R.nonzero()\n","        self.samples = [(i, j, self.R[i,j]) for i, j in zip(rows, columns)]\n","\n","        # Stochastic gradient descent for given number of iterations\n","        training_process = []\n","        for i in range(self.iterations):\n","            np.random.shuffle(self.samples)\n","            self.sgd()\n","            rmse = self.rmse()\n","            training_process.append((i+1, rmse))\n","            if self.verbose:\n","                if (i+1) % 10 == 0:\n","                    print(\"Iteration: %d ; Train RMSE = %.4f \" % (i+1, rmse))\n","        return training_process\n","\n","    # Rating prediction for user i and item j\n","    def get_prediction(self, i, j):\n","        prediction = self.b + self.b_u[i] + self.b_d[j] + self.P[i, :].dot(self.Q[j, :].T)\n","        return prediction\n","\n","    # Stochastic gradient descent to get optimized P and Q matrix\n","    def sgd(self):\n","        for i, j, r in self.samples:\n","            prediction = self.get_prediction(i, j)\n","            e = (r - prediction)\n","\n","            self.b_u[i] += self.alpha * (e - self.beta * self.b_u[i])\n","            self.b_d[j] += self.alpha * (e - self.beta * self.b_d[j])\n","\n","            self.P[i, :] += self.alpha * (e * self.Q[j, :] - self.beta * self.P[i,:])\n","            self.Q[j, :] += self.alpha * (e * self.P[i, :] - self.beta * self.Q[j,:])\n"],"metadata":{"id":"QogUImUvi9vS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["R_temp = ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)\n","mf = MF(R_temp, K=30, alpha=0.001, beta=0.02, iterations=100, verbose=True)\n","train_process = mf.train()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wNQ_pLJGi_zc","executionInfo":{"status":"ok","timestamp":1648169588469,"user_tz":-540,"elapsed":261945,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"11a054ab-a2fd-408e-dd5d-734ecc4938ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration: 10 ; Train RMSE = 0.9585 \n","Iteration: 20 ; Train RMSE = 0.9374 \n","Iteration: 30 ; Train RMSE = 0.9281 \n","Iteration: 40 ; Train RMSE = 0.9225 \n","Iteration: 50 ; Train RMSE = 0.9184 \n","Iteration: 60 ; Train RMSE = 0.9146 \n","Iteration: 70 ; Train RMSE = 0.9102 \n","Iteration: 80 ; Train RMSE = 0.9042 \n","Iteration: 90 ; Train RMSE = 0.8956 \n","Iteration: 100 ; Train RMSE = 0.8839 \n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"GqP32JmnjBVy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"jGtfOACPsSGc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"cFkvZmv4sSNX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","\n","r_cols = ['user_id', 'movie_id', 'rating', 'timestamp']\n","ratings = pd.read_csv('u.data', names=r_cols,  sep='\\t',encoding='latin-1')\n","ratings = ratings[['user_id', 'movie_id', 'rating']].astype(int)            # timestamp ì œê±°\n"],"metadata":{"id":"ZoLCLCVjsSU2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.utils import shuffle"],"metadata":{"id":"kFvHQWBhsS6W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["TRAIN_SIZE = 0.75\n","ratings = shuffle(ratings, random_state=1)\n","cutoff = int(TRAIN_SIZE * len(ratings))\n","ratings_train = ratings.iloc[:cutoff]\n","ratings_test = ratings.iloc[cutoff:]"],"metadata":{"id":"KtH0pq7ysTy4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"1eMx4pQM0lTg","executionInfo":{"status":"ok","timestamp":1648173931327,"user_tz":-540,"elapsed":335,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"2a74d66a-bb67-4f75-cd08-cf9ab12df3ce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       user_id  movie_id  rating\n","88407      846       380       3\n","85896      807       422       4\n","80542      805       436       3\n","45444      523       116       5\n","97756      819       744       5\n","...        ...       ...     ...\n","87334      116       124       3\n","20165      399       969       3\n","88227      935       286       5\n","24962      468         4       5\n","44221      500       611       5\n","\n","[25000 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-6c544460-feb2-430e-8420-e2d6bcea7e78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>88407</th>\n","      <td>846</td>\n","      <td>380</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>85896</th>\n","      <td>807</td>\n","      <td>422</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>80542</th>\n","      <td>805</td>\n","      <td>436</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>45444</th>\n","      <td>523</td>\n","      <td>116</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>97756</th>\n","      <td>819</td>\n","      <td>744</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87334</th>\n","      <td>116</td>\n","      <td>124</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>20165</th>\n","      <td>399</td>\n","      <td>969</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>88227</th>\n","      <td>935</td>\n","      <td>286</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>24962</th>\n","      <td>468</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>44221</th>\n","      <td>500</td>\n","      <td>611</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25000 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c544460-feb2-430e-8420-e2d6bcea7e78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6c544460-feb2-430e-8420-e2d6bcea7e78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6c544460-feb2-430e-8420-e2d6bcea7e78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["ratings_test.iloc[0, 1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4gn3Xc3I0gzA","executionInfo":{"status":"ok","timestamp":1648173948542,"user_tz":-540,"elapsed":321,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"59e5c428-b1c1-48ba-9809-1a203dfc037e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["380"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":[""],"metadata":{"id":"jYL8tdpb0g2o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"4bB1h-K20g6o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"lQV0swNH0g-T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["R_temp = ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)"],"metadata":{"id":"1ggFECt9sUke"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["R_temp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"BT809RHmwLCU","executionInfo":{"status":"ok","timestamp":1648172778906,"user_tz":-540,"elapsed":390,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"74065187-91d0-4aaf-c721-ba64a8cd68fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_id  1     2     3     4     5     6     7     8     9     10    ...  \\\n","user_id                                                               ...   \n","1          5.0   3.0   4.0   3.0   3.0   5.0   4.0   1.0   5.0   3.0  ...   \n","2          4.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   2.0  ...   \n","3          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","4          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","5          4.0   3.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","...        ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  ...   \n","939        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   5.0   0.0  ...   \n","940        0.0   0.0   0.0   2.0   0.0   0.0   4.0   5.0   3.0   0.0  ...   \n","941        5.0   0.0   0.0   0.0   0.0   0.0   4.0   0.0   0.0   0.0  ...   \n","942        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   \n","943        0.0   5.0   0.0   0.0   0.0   0.0   0.0   0.0   3.0   0.0  ...   \n","\n","movie_id  1673  1674  1675  1676  1677  1678  1679  1680  1681  1682  \n","user_id                                                               \n","1          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","2          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","3          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","4          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","5          0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","...        ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  \n","939        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","940        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","941        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","942        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","943        0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n","\n","[943 rows x 1682 columns]"],"text/html":["\n","  <div id=\"df-45b1b675-73f5-46b9-89f9-bbd73cab8574\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>movie_id</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>...</th>\n","      <th>1673</th>\n","      <th>1674</th>\n","      <th>1675</th>\n","      <th>1676</th>\n","      <th>1677</th>\n","      <th>1678</th>\n","      <th>1679</th>\n","      <th>1680</th>\n","      <th>1681</th>\n","      <th>1682</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>939</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>940</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>941</th>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>942</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>943</th>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>943 rows Ã— 1682 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45b1b675-73f5-46b9-89f9-bbd73cab8574')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-45b1b675-73f5-46b9-89f9-bbd73cab8574 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-45b1b675-73f5-46b9-89f9-bbd73cab8574');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["R_temp.iloc[0][1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQixs2pawboM","executionInfo":{"status":"ok","timestamp":1648172949968,"user_tz":-540,"elapsed":356,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"f394a607-ceb0-469c-a59e-a82dd0c8a6f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.0"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["len(R_temp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q2fBN1EGxmbT","executionInfo":{"status":"ok","timestamp":1648173152252,"user_tz":-540,"elapsed":6,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"0c45bf96-217f-42d7-8509-8035eed9a2bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["943"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["R_temp.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_j5_Yewaxrt3","executionInfo":{"status":"ok","timestamp":1648173176456,"user_tz":-540,"elapsed":343,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"052d4587-51a6-4966-b050-dbf60fef0e5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(943, 1682)"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["for i, one_id in enumerate(R_temp):\n","   print(i, one_id)\n","   "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0p9kTJqwPGR","executionInfo":{"status":"ok","timestamp":1648173223482,"user_tz":-540,"elapsed":694,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"60ebc48e-dbad-407d-af4d-410b0e59d0b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 1\n","1 2\n","2 3\n","3 4\n","4 5\n","5 6\n","6 7\n","7 8\n","8 9\n","9 10\n","10 11\n","11 12\n","12 13\n","13 14\n","14 15\n","15 16\n","16 17\n","17 18\n","18 19\n","19 20\n","20 21\n","21 22\n","22 23\n","23 24\n","24 25\n","25 26\n","26 27\n","27 28\n","28 29\n","29 30\n","30 31\n","31 32\n","32 33\n","33 34\n","34 35\n","35 36\n","36 37\n","37 38\n","38 39\n","39 40\n","40 41\n","41 42\n","42 43\n","43 44\n","44 45\n","45 46\n","46 47\n","47 48\n","48 49\n","49 50\n","50 51\n","51 52\n","52 53\n","53 54\n","54 55\n","55 56\n","56 57\n","57 58\n","58 59\n","59 60\n","60 61\n","61 62\n","62 63\n","63 64\n","64 65\n","65 66\n","66 67\n","67 68\n","68 69\n","69 70\n","70 71\n","71 72\n","72 73\n","73 74\n","74 75\n","75 76\n","76 77\n","77 78\n","78 79\n","79 80\n","80 81\n","81 82\n","82 83\n","83 84\n","84 85\n","85 86\n","86 87\n","87 88\n","88 89\n","89 90\n","90 91\n","91 92\n","92 93\n","93 94\n","94 95\n","95 96\n","96 97\n","97 98\n","98 99\n","99 100\n","100 101\n","101 102\n","102 103\n","103 104\n","104 105\n","105 106\n","106 107\n","107 108\n","108 109\n","109 110\n","110 111\n","111 112\n","112 113\n","113 114\n","114 115\n","115 116\n","116 117\n","117 118\n","118 119\n","119 120\n","120 121\n","121 122\n","122 123\n","123 124\n","124 125\n","125 126\n","126 127\n","127 128\n","128 129\n","129 130\n","130 131\n","131 132\n","132 133\n","133 134\n","134 135\n","135 136\n","136 137\n","137 138\n","138 139\n","139 140\n","140 141\n","141 142\n","142 143\n","143 144\n","144 145\n","145 146\n","146 147\n","147 148\n","148 149\n","149 150\n","150 151\n","151 152\n","152 153\n","153 154\n","154 155\n","155 156\n","156 157\n","157 158\n","158 159\n","159 160\n","160 161\n","161 162\n","162 163\n","163 164\n","164 165\n","165 166\n","166 167\n","167 168\n","168 169\n","169 170\n","170 171\n","171 172\n","172 173\n","173 174\n","174 175\n","175 176\n","176 177\n","177 178\n","178 179\n","179 180\n","180 181\n","181 182\n","182 183\n","183 184\n","184 185\n","185 186\n","186 187\n","187 188\n","188 189\n","189 190\n","190 191\n","191 192\n","192 193\n","193 194\n","194 195\n","195 196\n","196 197\n","197 198\n","198 199\n","199 200\n","200 201\n","201 202\n","202 203\n","203 204\n","204 205\n","205 206\n","206 207\n","207 208\n","208 209\n","209 210\n","210 211\n","211 212\n","212 213\n","213 214\n","214 215\n","215 216\n","216 217\n","217 218\n","218 219\n","219 220\n","220 221\n","221 222\n","222 223\n","223 224\n","224 225\n","225 226\n","226 227\n","227 228\n","228 229\n","229 230\n","230 231\n","231 232\n","232 233\n","233 234\n","234 235\n","235 236\n","236 237\n","237 238\n","238 239\n","239 240\n","240 241\n","241 242\n","242 243\n","243 244\n","244 245\n","245 246\n","246 247\n","247 248\n","248 249\n","249 250\n","250 251\n","251 252\n","252 253\n","253 254\n","254 255\n","255 256\n","256 257\n","257 258\n","258 259\n","259 260\n","260 261\n","261 262\n","262 263\n","263 264\n","264 265\n","265 266\n","266 267\n","267 268\n","268 269\n","269 270\n","270 271\n","271 272\n","272 273\n","273 274\n","274 275\n","275 276\n","276 277\n","277 278\n","278 279\n","279 280\n","280 281\n","281 282\n","282 283\n","283 284\n","284 285\n","285 286\n","286 287\n","287 288\n","288 289\n","289 290\n","290 291\n","291 292\n","292 293\n","293 294\n","294 295\n","295 296\n","296 297\n","297 298\n","298 299\n","299 300\n","300 301\n","301 302\n","302 303\n","303 304\n","304 305\n","305 306\n","306 307\n","307 308\n","308 309\n","309 310\n","310 311\n","311 312\n","312 313\n","313 314\n","314 315\n","315 316\n","316 317\n","317 318\n","318 319\n","319 320\n","320 321\n","321 322\n","322 323\n","323 324\n","324 325\n","325 326\n","326 327\n","327 328\n","328 329\n","329 330\n","330 331\n","331 332\n","332 333\n","333 334\n","334 335\n","335 336\n","336 337\n","337 338\n","338 339\n","339 340\n","340 341\n","341 342\n","342 343\n","343 344\n","344 345\n","345 346\n","346 347\n","347 348\n","348 349\n","349 350\n","350 351\n","351 352\n","352 353\n","353 354\n","354 355\n","355 356\n","356 357\n","357 358\n","358 359\n","359 360\n","360 361\n","361 362\n","362 363\n","363 364\n","364 365\n","365 366\n","366 367\n","367 368\n","368 369\n","369 370\n","370 371\n","371 372\n","372 373\n","373 374\n","374 375\n","375 376\n","376 377\n","377 378\n","378 379\n","379 380\n","380 381\n","381 382\n","382 383\n","383 384\n","384 385\n","385 386\n","386 387\n","387 388\n","388 389\n","389 390\n","390 391\n","391 392\n","392 393\n","393 394\n","394 395\n","395 396\n","396 397\n","397 398\n","398 399\n","399 400\n","400 401\n","401 402\n","402 403\n","403 404\n","404 405\n","405 406\n","406 407\n","407 408\n","408 409\n","409 410\n","410 411\n","411 412\n","412 413\n","413 414\n","414 415\n","415 416\n","416 417\n","417 418\n","418 419\n","419 420\n","420 421\n","421 422\n","422 423\n","423 424\n","424 425\n","425 426\n","426 427\n","427 428\n","428 429\n","429 430\n","430 431\n","431 432\n","432 433\n","433 434\n","434 435\n","435 436\n","436 437\n","437 438\n","438 439\n","439 440\n","440 441\n","441 442\n","442 443\n","443 444\n","444 445\n","445 446\n","446 447\n","447 448\n","448 449\n","449 450\n","450 451\n","451 452\n","452 453\n","453 454\n","454 455\n","455 456\n","456 457\n","457 458\n","458 459\n","459 460\n","460 461\n","461 462\n","462 463\n","463 464\n","464 465\n","465 466\n","466 467\n","467 468\n","468 469\n","469 470\n","470 471\n","471 472\n","472 473\n","473 474\n","474 475\n","475 476\n","476 477\n","477 478\n","478 479\n","479 480\n","480 481\n","481 482\n","482 483\n","483 484\n","484 485\n","485 486\n","486 487\n","487 488\n","488 489\n","489 490\n","490 491\n","491 492\n","492 493\n","493 494\n","494 495\n","495 496\n","496 497\n","497 498\n","498 499\n","499 500\n","500 501\n","501 502\n","502 503\n","503 504\n","504 505\n","505 506\n","506 507\n","507 508\n","508 509\n","509 510\n","510 511\n","511 512\n","512 513\n","513 514\n","514 515\n","515 516\n","516 517\n","517 518\n","518 519\n","519 520\n","520 521\n","521 522\n","522 523\n","523 524\n","524 525\n","525 526\n","526 527\n","527 528\n","528 529\n","529 530\n","530 531\n","531 532\n","532 533\n","533 534\n","534 535\n","535 536\n","536 537\n","537 538\n","538 539\n","539 540\n","540 541\n","541 542\n","542 543\n","543 544\n","544 545\n","545 546\n","546 547\n","547 548\n","548 549\n","549 550\n","550 551\n","551 552\n","552 553\n","553 554\n","554 555\n","555 556\n","556 557\n","557 558\n","558 559\n","559 560\n","560 561\n","561 562\n","562 563\n","563 564\n","564 565\n","565 566\n","566 567\n","567 568\n","568 569\n","569 570\n","570 571\n","571 572\n","572 573\n","573 574\n","574 575\n","575 576\n","576 577\n","577 578\n","578 579\n","579 580\n","580 581\n","581 582\n","582 583\n","583 584\n","584 585\n","585 586\n","586 587\n","587 588\n","588 589\n","589 590\n","590 591\n","591 592\n","592 593\n","593 594\n","594 595\n","595 596\n","596 597\n","597 598\n","598 599\n","599 600\n","600 601\n","601 602\n","602 603\n","603 604\n","604 605\n","605 606\n","606 607\n","607 608\n","608 609\n","609 610\n","610 611\n","611 612\n","612 613\n","613 614\n","614 615\n","615 616\n","616 617\n","617 618\n","618 619\n","619 620\n","620 621\n","621 622\n","622 623\n","623 624\n","624 625\n","625 626\n","626 627\n","627 628\n","628 629\n","629 630\n","630 631\n","631 632\n","632 633\n","633 634\n","634 635\n","635 636\n","636 637\n","637 638\n","638 639\n","639 640\n","640 641\n","641 642\n","642 643\n","643 644\n","644 645\n","645 646\n","646 647\n","647 648\n","648 649\n","649 650\n","650 651\n","651 652\n","652 653\n","653 654\n","654 655\n","655 656\n","656 657\n","657 658\n","658 659\n","659 660\n","660 661\n","661 662\n","662 663\n","663 664\n","664 665\n","665 666\n","666 667\n","667 668\n","668 669\n","669 670\n","670 671\n","671 672\n","672 673\n","673 674\n","674 675\n","675 676\n","676 677\n","677 678\n","678 679\n","679 680\n","680 681\n","681 682\n","682 683\n","683 684\n","684 685\n","685 686\n","686 687\n","687 688\n","688 689\n","689 690\n","690 691\n","691 692\n","692 693\n","693 694\n","694 695\n","695 696\n","696 697\n","697 698\n","698 699\n","699 700\n","700 701\n","701 702\n","702 703\n","703 704\n","704 705\n","705 706\n","706 707\n","707 708\n","708 709\n","709 710\n","710 711\n","711 712\n","712 713\n","713 714\n","714 715\n","715 716\n","716 717\n","717 718\n","718 719\n","719 720\n","720 721\n","721 722\n","722 723\n","723 724\n","724 725\n","725 726\n","726 727\n","727 728\n","728 729\n","729 730\n","730 731\n","731 732\n","732 733\n","733 734\n","734 735\n","735 736\n","736 737\n","737 738\n","738 739\n","739 740\n","740 741\n","741 742\n","742 743\n","743 744\n","744 745\n","745 746\n","746 747\n","747 748\n","748 749\n","749 750\n","750 751\n","751 752\n","752 753\n","753 754\n","754 755\n","755 756\n","756 757\n","757 758\n","758 759\n","759 760\n","760 761\n","761 762\n","762 763\n","763 764\n","764 765\n","765 766\n","766 767\n","767 768\n","768 769\n","769 770\n","770 771\n","771 772\n","772 773\n","773 774\n","774 775\n","775 776\n","776 777\n","777 778\n","778 779\n","779 780\n","780 781\n","781 782\n","782 783\n","783 784\n","784 785\n","785 786\n","786 787\n","787 788\n","788 789\n","789 790\n","790 791\n","791 792\n","792 793\n","793 794\n","794 795\n","795 796\n","796 797\n","797 798\n","798 799\n","799 800\n","800 801\n","801 802\n","802 803\n","803 804\n","804 805\n","805 806\n","806 807\n","807 808\n","808 809\n","809 810\n","810 811\n","811 812\n","812 813\n","813 814\n","814 815\n","815 816\n","816 817\n","817 818\n","818 819\n","819 820\n","820 821\n","821 822\n","822 823\n","823 824\n","824 825\n","825 826\n","826 827\n","827 828\n","828 829\n","829 830\n","830 831\n","831 832\n","832 833\n","833 834\n","834 835\n","835 836\n","836 837\n","837 838\n","838 839\n","839 840\n","840 841\n","841 842\n","842 843\n","843 844\n","844 845\n","845 846\n","846 847\n","847 848\n","848 849\n","849 850\n","850 851\n","851 852\n","852 853\n","853 854\n","854 855\n","855 856\n","856 857\n","857 858\n","858 859\n","859 860\n","860 861\n","861 862\n","862 863\n","863 864\n","864 865\n","865 866\n","866 867\n","867 868\n","868 869\n","869 870\n","870 871\n","871 872\n","872 873\n","873 874\n","874 875\n","875 876\n","876 877\n","877 878\n","878 879\n","879 880\n","880 881\n","881 882\n","882 883\n","883 884\n","884 885\n","885 886\n","886 887\n","887 888\n","888 889\n","889 890\n","890 891\n","891 892\n","892 893\n","893 894\n","894 895\n","895 896\n","896 897\n","897 898\n","898 899\n","899 900\n","900 901\n","901 902\n","902 903\n","903 904\n","904 905\n","905 906\n","906 907\n","907 908\n","908 909\n","909 910\n","910 911\n","911 912\n","912 913\n","913 914\n","914 915\n","915 916\n","916 917\n","917 918\n","918 919\n","919 920\n","920 921\n","921 922\n","922 923\n","923 924\n","924 925\n","925 926\n","926 927\n","927 928\n","928 929\n","929 930\n","930 931\n","931 932\n","932 933\n","933 934\n","934 935\n","935 936\n","936 937\n","937 938\n","938 939\n","939 940\n","940 941\n","941 942\n","942 943\n","943 944\n","944 945\n","945 946\n","946 947\n","947 948\n","948 949\n","949 950\n","950 951\n","951 952\n","952 953\n","953 954\n","954 955\n","955 956\n","956 957\n","957 958\n","958 959\n","959 960\n","960 961\n","961 962\n","962 963\n","963 964\n","964 965\n","965 966\n","966 967\n","967 968\n","968 969\n","969 970\n","970 971\n","971 972\n","972 973\n","973 974\n","974 975\n","975 976\n","976 977\n","977 978\n","978 979\n","979 980\n","980 981\n","981 982\n","982 983\n","983 984\n","984 985\n","985 986\n","986 987\n","987 988\n","988 989\n","989 990\n","990 991\n","991 992\n","992 993\n","993 994\n","994 995\n","995 996\n","996 997\n","997 998\n","998 999\n","999 1000\n","1000 1001\n","1001 1002\n","1002 1003\n","1003 1004\n","1004 1005\n","1005 1006\n","1006 1007\n","1007 1008\n","1008 1009\n","1009 1010\n","1010 1011\n","1011 1012\n","1012 1013\n","1013 1014\n","1014 1015\n","1015 1016\n","1016 1017\n","1017 1018\n","1018 1019\n","1019 1020\n","1020 1021\n","1021 1022\n","1022 1023\n","1023 1024\n","1024 1025\n","1025 1026\n","1026 1027\n","1027 1028\n","1028 1029\n","1029 1030\n","1030 1031\n","1031 1032\n","1032 1033\n","1033 1034\n","1034 1035\n","1035 1036\n","1036 1037\n","1037 1038\n","1038 1039\n","1039 1040\n","1040 1041\n","1041 1042\n","1042 1043\n","1043 1044\n","1044 1045\n","1045 1046\n","1046 1047\n","1047 1048\n","1048 1049\n","1049 1050\n","1050 1051\n","1051 1052\n","1052 1053\n","1053 1054\n","1054 1055\n","1055 1056\n","1056 1057\n","1057 1058\n","1058 1059\n","1059 1060\n","1060 1061\n","1061 1062\n","1062 1063\n","1063 1064\n","1064 1065\n","1065 1066\n","1066 1067\n","1067 1068\n","1068 1069\n","1069 1070\n","1070 1071\n","1071 1072\n","1072 1073\n","1073 1074\n","1074 1075\n","1075 1076\n","1076 1077\n","1077 1078\n","1078 1079\n","1079 1080\n","1080 1081\n","1081 1082\n","1082 1083\n","1083 1084\n","1084 1085\n","1085 1086\n","1086 1087\n","1087 1088\n","1088 1089\n","1089 1090\n","1090 1091\n","1091 1092\n","1092 1093\n","1093 1094\n","1094 1095\n","1095 1096\n","1096 1097\n","1097 1098\n","1098 1099\n","1099 1100\n","1100 1101\n","1101 1102\n","1102 1103\n","1103 1104\n","1104 1105\n","1105 1106\n","1106 1107\n","1107 1108\n","1108 1109\n","1109 1110\n","1110 1111\n","1111 1112\n","1112 1113\n","1113 1114\n","1114 1115\n","1115 1116\n","1116 1117\n","1117 1118\n","1118 1119\n","1119 1120\n","1120 1121\n","1121 1122\n","1122 1123\n","1123 1124\n","1124 1125\n","1125 1126\n","1126 1127\n","1127 1128\n","1128 1129\n","1129 1130\n","1130 1131\n","1131 1132\n","1132 1133\n","1133 1134\n","1134 1135\n","1135 1136\n","1136 1137\n","1137 1138\n","1138 1139\n","1139 1140\n","1140 1141\n","1141 1142\n","1142 1143\n","1143 1144\n","1144 1145\n","1145 1146\n","1146 1147\n","1147 1148\n","1148 1149\n","1149 1150\n","1150 1151\n","1151 1152\n","1152 1153\n","1153 1154\n","1154 1155\n","1155 1156\n","1156 1157\n","1157 1158\n","1158 1159\n","1159 1160\n","1160 1161\n","1161 1162\n","1162 1163\n","1163 1164\n","1164 1165\n","1165 1166\n","1166 1167\n","1167 1168\n","1168 1169\n","1169 1170\n","1170 1171\n","1171 1172\n","1172 1173\n","1173 1174\n","1174 1175\n","1175 1176\n","1176 1177\n","1177 1178\n","1178 1179\n","1179 1180\n","1180 1181\n","1181 1182\n","1182 1183\n","1183 1184\n","1184 1185\n","1185 1186\n","1186 1187\n","1187 1188\n","1188 1189\n","1189 1190\n","1190 1191\n","1191 1192\n","1192 1193\n","1193 1194\n","1194 1195\n","1195 1196\n","1196 1197\n","1197 1198\n","1198 1199\n","1199 1200\n","1200 1201\n","1201 1202\n","1202 1203\n","1203 1204\n","1204 1205\n","1205 1206\n","1206 1207\n","1207 1208\n","1208 1209\n","1209 1210\n","1210 1211\n","1211 1212\n","1212 1213\n","1213 1214\n","1214 1215\n","1215 1216\n","1216 1217\n","1217 1218\n","1218 1219\n","1219 1220\n","1220 1221\n","1221 1222\n","1222 1223\n","1223 1224\n","1224 1225\n","1225 1226\n","1226 1227\n","1227 1228\n","1228 1229\n","1229 1230\n","1230 1231\n","1231 1232\n","1232 1233\n","1233 1234\n","1234 1235\n","1235 1236\n","1236 1237\n","1237 1238\n","1238 1239\n","1239 1240\n","1240 1241\n","1241 1242\n","1242 1243\n","1243 1244\n","1244 1245\n","1245 1246\n","1246 1247\n","1247 1248\n","1248 1249\n","1249 1250\n","1250 1251\n","1251 1252\n","1252 1253\n","1253 1254\n","1254 1255\n","1255 1256\n","1256 1257\n","1257 1258\n","1258 1259\n","1259 1260\n","1260 1261\n","1261 1262\n","1262 1263\n","1263 1264\n","1264 1265\n","1265 1266\n","1266 1267\n","1267 1268\n","1268 1269\n","1269 1270\n","1270 1271\n","1271 1272\n","1272 1273\n","1273 1274\n","1274 1275\n","1275 1276\n","1276 1277\n","1277 1278\n","1278 1279\n","1279 1280\n","1280 1281\n","1281 1282\n","1282 1283\n","1283 1284\n","1284 1285\n","1285 1286\n","1286 1287\n","1287 1288\n","1288 1289\n","1289 1290\n","1290 1291\n","1291 1292\n","1292 1293\n","1293 1294\n","1294 1295\n","1295 1296\n","1296 1297\n","1297 1298\n","1298 1299\n","1299 1300\n","1300 1301\n","1301 1302\n","1302 1303\n","1303 1304\n","1304 1305\n","1305 1306\n","1306 1307\n","1307 1308\n","1308 1309\n","1309 1310\n","1310 1311\n","1311 1312\n","1312 1313\n","1313 1314\n","1314 1315\n","1315 1316\n","1316 1317\n","1317 1318\n","1318 1319\n","1319 1320\n","1320 1321\n","1321 1322\n","1322 1323\n","1323 1324\n","1324 1325\n","1325 1326\n","1326 1327\n","1327 1328\n","1328 1329\n","1329 1330\n","1330 1331\n","1331 1332\n","1332 1333\n","1333 1334\n","1334 1335\n","1335 1336\n","1336 1337\n","1337 1338\n","1338 1339\n","1339 1340\n","1340 1341\n","1341 1342\n","1342 1343\n","1343 1344\n","1344 1345\n","1345 1346\n","1346 1347\n","1347 1348\n","1348 1349\n","1349 1350\n","1350 1351\n","1351 1352\n","1352 1353\n","1353 1354\n","1354 1355\n","1355 1356\n","1356 1357\n","1357 1358\n","1358 1359\n","1359 1360\n","1360 1361\n","1361 1362\n","1362 1363\n","1363 1364\n","1364 1365\n","1365 1366\n","1366 1367\n","1367 1368\n","1368 1369\n","1369 1370\n","1370 1371\n","1371 1372\n","1372 1373\n","1373 1374\n","1374 1375\n","1375 1376\n","1376 1377\n","1377 1378\n","1378 1379\n","1379 1380\n","1380 1381\n","1381 1382\n","1382 1383\n","1383 1384\n","1384 1385\n","1385 1386\n","1386 1387\n","1387 1388\n","1388 1389\n","1389 1390\n","1390 1391\n","1391 1392\n","1392 1393\n","1393 1394\n","1394 1395\n","1395 1396\n","1396 1397\n","1397 1398\n","1398 1399\n","1399 1400\n","1400 1401\n","1401 1402\n","1402 1403\n","1403 1404\n","1404 1405\n","1405 1406\n","1406 1407\n","1407 1408\n","1408 1409\n","1409 1410\n","1410 1411\n","1411 1412\n","1412 1413\n","1413 1414\n","1414 1415\n","1415 1416\n","1416 1417\n","1417 1418\n","1418 1419\n","1419 1420\n","1420 1421\n","1421 1422\n","1422 1423\n","1423 1424\n","1424 1425\n","1425 1426\n","1426 1427\n","1427 1428\n","1428 1429\n","1429 1430\n","1430 1431\n","1431 1432\n","1432 1433\n","1433 1434\n","1434 1435\n","1435 1436\n","1436 1437\n","1437 1438\n","1438 1439\n","1439 1440\n","1440 1441\n","1441 1442\n","1442 1443\n","1443 1444\n","1444 1445\n","1445 1446\n","1446 1447\n","1447 1448\n","1448 1449\n","1449 1450\n","1450 1451\n","1451 1452\n","1452 1453\n","1453 1454\n","1454 1455\n","1455 1456\n","1456 1457\n","1457 1458\n","1458 1459\n","1459 1460\n","1460 1461\n","1461 1462\n","1462 1463\n","1463 1464\n","1464 1465\n","1465 1466\n","1466 1467\n","1467 1468\n","1468 1469\n","1469 1470\n","1470 1471\n","1471 1472\n","1472 1473\n","1473 1474\n","1474 1475\n","1475 1476\n","1476 1477\n","1477 1478\n","1478 1479\n","1479 1480\n","1480 1481\n","1481 1482\n","1482 1483\n","1483 1484\n","1484 1485\n","1485 1486\n","1486 1487\n","1487 1488\n","1488 1489\n","1489 1490\n","1490 1491\n","1491 1492\n","1492 1493\n","1493 1494\n","1494 1495\n","1495 1496\n","1496 1497\n","1497 1498\n","1498 1499\n","1499 1500\n","1500 1501\n","1501 1502\n","1502 1503\n","1503 1504\n","1504 1505\n","1505 1506\n","1506 1507\n","1507 1508\n","1508 1509\n","1509 1510\n","1510 1511\n","1511 1512\n","1512 1513\n","1513 1514\n","1514 1515\n","1515 1516\n","1516 1517\n","1517 1518\n","1518 1519\n","1519 1520\n","1520 1521\n","1521 1522\n","1522 1523\n","1523 1524\n","1524 1525\n","1525 1526\n","1526 1527\n","1527 1528\n","1528 1529\n","1529 1530\n","1530 1531\n","1531 1532\n","1532 1533\n","1533 1534\n","1534 1535\n","1535 1536\n","1536 1537\n","1537 1538\n","1538 1539\n","1539 1540\n","1540 1541\n","1541 1542\n","1542 1543\n","1543 1544\n","1544 1545\n","1545 1546\n","1546 1547\n","1547 1548\n","1548 1549\n","1549 1550\n","1550 1551\n","1551 1552\n","1552 1553\n","1553 1554\n","1554 1555\n","1555 1556\n","1556 1557\n","1557 1558\n","1558 1559\n","1559 1560\n","1560 1561\n","1561 1562\n","1562 1563\n","1563 1564\n","1564 1565\n","1565 1566\n","1566 1567\n","1567 1568\n","1568 1569\n","1569 1570\n","1570 1571\n","1571 1572\n","1572 1573\n","1573 1574\n","1574 1575\n","1575 1576\n","1576 1577\n","1577 1578\n","1578 1579\n","1579 1580\n","1580 1581\n","1581 1582\n","1582 1583\n","1583 1584\n","1584 1585\n","1585 1586\n","1586 1587\n","1587 1588\n","1588 1589\n","1589 1590\n","1590 1591\n","1591 1592\n","1592 1593\n","1593 1594\n","1594 1595\n","1595 1596\n","1596 1597\n","1597 1598\n","1598 1599\n","1599 1600\n","1600 1601\n","1601 1602\n","1602 1603\n","1603 1604\n","1604 1605\n","1605 1606\n","1606 1607\n","1607 1608\n","1608 1609\n","1609 1610\n","1610 1611\n","1611 1612\n","1612 1613\n","1613 1614\n","1614 1615\n","1615 1616\n","1616 1617\n","1617 1618\n","1618 1619\n","1619 1620\n","1620 1621\n","1621 1622\n","1622 1623\n","1623 1624\n","1624 1625\n","1625 1626\n","1626 1627\n","1627 1628\n","1628 1629\n","1629 1630\n","1630 1631\n","1631 1632\n","1632 1633\n","1633 1634\n","1634 1635\n","1635 1636\n","1636 1637\n","1637 1638\n","1638 1639\n","1639 1640\n","1640 1641\n","1641 1642\n","1642 1643\n","1643 1644\n","1644 1645\n","1645 1646\n","1646 1647\n","1647 1648\n","1648 1649\n","1649 1650\n","1650 1651\n","1651 1652\n","1652 1653\n","1653 1654\n","1654 1655\n","1655 1656\n","1656 1657\n","1657 1658\n","1658 1659\n","1659 1660\n","1660 1661\n","1661 1662\n","1662 1663\n","1663 1664\n","1664 1665\n","1665 1666\n","1666 1667\n","1667 1668\n","1668 1669\n","1669 1670\n","1670 1671\n","1671 1672\n","1672 1673\n","1673 1674\n","1674 1675\n","1675 1676\n","1676 1677\n","1677 1678\n","1678 1679\n","1679 1680\n","1680 1681\n","1681 1682\n"]}]},{"cell_type":"code","source":["item_id_index = []\n","index_item_id = []\n","for i, one_id in enumerate(R_temp):\n","    item_id_index.append([one_id, i])\n","    index_item_id.append([i, one_id])"],"metadata":{"id":"NNsptwGKsW-A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"9EHZHtbH3wqh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"0WTteHKf3wtG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"4UtwnSnh3wvg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Oi72ml_U3wxo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"llVmMNn-3wz8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","\n","r_cols = ['user_id', 'movie_id', 'rating', 'timestamp']\n","ratings = pd.read_csv('u.data', names=r_cols,  sep='\\t',encoding='latin-1')\n","ratings = ratings[['user_id', 'movie_id', 'rating']].astype(int)            # timestamp ì œê±°\n","\n","\n","from sklearn.utils import shuffle\n","\n","\n","TRAIN_SIZE = 0.75\n","ratings = shuffle(ratings, random_state=1)\n","cutoff = int(TRAIN_SIZE * len(ratings))\n","ratings_train = ratings.iloc[:cutoff]\n","ratings_test = ratings.iloc[cutoff:]"],"metadata":{"id":"OtU_heK33w2X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class NEW_MF():\n","    def __init__(self, ratings, K, alpha, beta, iterations, verbose=True):\n","        self.R = np.array(ratings)\n","\n","        item_id_index = []\n","        index_item_id = []\n","        for i, one_id in enumerate(ratings):\n","            item_id_index.append([one_id, i])\n","            index_item_id.append([i, one_id])\n","\n","        self.item_id_index = dict(item_id_index)\n","        self.index_item_id = dict(index_item_id) \n","\n","        user_id_index = []\n","        index_user_id = []\n","\n","        for i, one_id in enumerate(ratings.T):\n","            user_id_index.append([one_id, i])\n","            index_user_id.append([i, one_id])\n","\n","        self.user_id_index = dict(user_id_index)\n","        self.index_user_id = dict(index_user_id)\n","\n","        self.num_users, self.num_items = np.shape(self.R)\n","        self.K = K\n","        self.alpha = alpha\n","        self.beta = beta\n","        self.iterations = iterations\n","        self.verbose = verbose\n","\n","    def rmse(self):\n","        xs, ys = self.R.nonzero()\n","        self.predictions = []\n","        self.errors = []\n","\n","        for x, y in zip(xs, ys):\n","            prediction = self.get_prediction(x, y)\n","            self.predictions.append(prediction)\n","            self.errors.append(self.R[x, y] - prediction)\n","\n","        self.predictions = np.array(self.predictions)\n","        self.errors = np.array(self.errors)\n","        return np.sqrt(np.mean(self.errors**2))\n","\n","    def get_prediction(self, i, j):\n","        prediction = self.b + self.b_u[i] + self.b_d[j] + self.P[i, :].dot(self.Q[j, :].T)\n","        return prediction\n","\n","    def sgd(self):\n","        for i, j, r in self.samples:\n","            prediction = self.get_prediction(i, j)\n","            e = (r - prediction)\n","\n","            self.b_u[i] += self.alpha * (e - self.beta * self.b_u[i])\n","            self.b_d[j] += self.alpha * (e - self.beta * self.b_d[j])\n","\n","            self.P[i, :] += self.alpha * (e * self.Q[j, :] - self.beta * self.P[i,:])\n","            self.Q[j, :] += self.alpha * (e * self.P[i, :] - self.beta * self.Q[j,:])\n","\n","    def set_test(self, ratings_test):\n","        test_set = []\n","        for i in range(len(ratings_test)):\n","            x = self.user_id_index[ratings_test.iloc[i, 0]]  # [i, 0] is user_id\n","            y = self.item_id_index[ratings_test.iloc[i, 1]]  # [i, 1] is movie_id\n","            z = ratings_test.iloc[i, 2]                      # [i, 2] is rating\n","\n","            test_set.append([x, y, z])  # [user_idx, movie_idx, rating]\n","            self.R[x, y] = 0            # set rating 0 cuz this x-y is used as test purpose\n","\n","        self.test_set = test_set\n","        return test_set                         # Return test set\n","\n","    def test_rmse(self):\n","        error = 0\n","        for one_set in self.test_set:    # [user_idx, movie_idx, rating]\n","            predicted = self.get_prediction(one_set[0], one_set[1])\n","            error += pow(one_set[2] - predicted, 2)\n","\n","        return np.sqrt(error/len(self.test_set))\n","\n","    def test(self):\n","        # Initializing user-feature and item-feature matrix\n","        self.P = np.random.normal(scale=1./self.K, size=(self.num_users, self.K))\n","        self.Q = np.random.normal(scale=1./self.K, size=(self.num_items, self.K))\n","\n","        # Initializing the bias terms\n","        self.b_u = np.zeros(self.num_users)\n","        self.b_d = np.zeros(self.num_items)\n","        self.b = np.mean(self.R[self.R.nonzero()])\n","\n","        # List of training samples\n","        rows, columns = self.R.nonzero()\n","\n","        # all test items are now set as 0.\n","        self.samples = [(i, j, self.R[i,j]) for i, j in zip(rows, columns)]\n","\n","        # Stochastic gradient descent for given number of iterations\n","        training_process = []\n","        for i in range(self.iterations):\n","            np.random.shuffle(self.samples)\n","            self.sgd()\n","\n","            learning_rmse = self.rmse()\n","            test_rmse = self.test_rmse()\n","            training_process.append((i + 1, learning_rmse, test_rmse))\n","\n","            if self.verbose:\n","                if (i+1) % 10 == 0:\n","                    print(\"Iteration: %d ; Train RMSE = %.4f ; Test RMSE = %.4f\" % (i+1, learning_rmse, test_rmse))\n","\n","        return training_process\n","\n","    # Ratings for given user_id and item_id\n","    def get_one_prediction(self, user_id, item_id):\n","        return self.get_prediction(self.user_id_index[user_id], self.item_id_index[item_id])\n","\n","    # Full user-movie rating matrix\n","    def full_prediction(self):\n","        return self.b + self.b_u[:,np.newaxis] + self.b_d[np.newaxis,:] + self.P.dot(self.Q.T)"],"metadata":{"id":"uvytm4g-3xEZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Testing MF RMSE\n","R_temp = ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)\n","mf = NEW_MF(R_temp, K=30, alpha=0.001, beta=0.02, iterations=100, verbose=True)\n","test_set = mf.set_test(ratings_test)\n","result = mf.test()\n","\n","# Printing predictions\n","print(mf.full_prediction())\n","print(mf.get_one_prediction(1, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WriTQXaV3y-L","executionInfo":{"status":"ok","timestamp":1648174989361,"user_tz":-540,"elapsed":209737,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}},"outputId":"be1f5184-c359-4b7d-b0f1-235f9b8aea73"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration: 10 ; Train RMSE = 0.9659 ; Test RMSE = 0.9833\n","Iteration: 20 ; Train RMSE = 0.9409 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9297 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9230 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9182 ; Test RMSE = 0.9495\n","Iteration: 60 ; Train RMSE = 0.9142 ; Test RMSE = 0.9476\n","Iteration: 70 ; Train RMSE = 0.9104 ; Test RMSE = 0.9460\n","Iteration: 80 ; Train RMSE = 0.9061 ; Test RMSE = 0.9445\n","Iteration: 90 ; Train RMSE = 0.9008 ; Test RMSE = 0.9428\n","Iteration: 100 ; Train RMSE = 0.8939 ; Test RMSE = 0.9406\n","[[3.73276363 3.40467801 3.09606198 ... 3.32256598 3.45924946 3.47222635]\n"," [3.86416818 3.50067622 3.17828652 ... 3.42326847 3.55193793 3.56823516]\n"," [3.31096979 2.86361587 2.52550968 ... 2.82067397 2.9452319  2.92575313]\n"," ...\n"," [4.21583289 3.76985707 3.41974008 ... 3.71000703 3.82613912 3.82795699]\n"," [4.3520684  3.89615659 3.54448999 ... 3.83211585 3.9435627  3.95265407]\n"," [3.74336291 3.38676218 3.04723229 ... 3.30290268 3.42757355 3.42599508]]\n","3.4046780074044887\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"Er1Zo5ip30W0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"L7eCxsFgSKZA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"096b066rSKc1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"GxkY-UXySKgO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"CrOAQXEuSKjy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.utils import shuffle\n","\n","\n","r_cols = ['user_id', 'movie_id', 'rating', 'timestamp']\n","ratings = pd.read_csv('u.data', names=r_cols,  sep='\\t',encoding='latin-1')\n","ratings = ratings[['user_id', 'movie_id', 'rating']].astype(int)"],"metadata":{"id":"pPOmtYHcSKnN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["TRAIN_SIZE = 0.75\n","ratings = shuffle(ratings, random_state=1)\n","cutoff = int(TRAIN_SIZE * len(ratings))\n","ratings_train = ratings.iloc[:cutoff]\n","ratings_test = ratings.iloc[cutoff:]"],"metadata":{"id":"MfL_QSsESLIs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class NEW_MF():\n","    def __init__(self, ratings, K, alpha, beta, iterations, verbose=True):\n","        self.R = np.array(ratings)\n","        item_id_index = []\n","        index_item_id = []\n","        for i, one_id in enumerate(ratings):\n","            item_id_index.append([one_id, i])\n","            index_item_id.append([i, one_id])\n","        self.item_id_index = dict(item_id_index)\n","        self.index_item_id = dict(index_item_id) \n","\n","        user_id_index = []\n","        index_user_id = []\n","        for i, one_id in enumerate(ratings.T):\n","            user_id_index.append([one_id, i])\n","            index_user_id.append([i, one_id])\n","\n","        self.user_id_index = dict(user_id_index)\n","        self.index_user_id = dict(index_user_id)\n","\n","        self.num_users, self.num_items = np.shape(self.R)\n","        self.K = K\n","        self.alpha = alpha\n","        self.beta = beta\n","        self.iterations = iterations\n","        self.verbose = verbose\n","\n","    def rmse(self):\n","        xs, ys = self.R.nonzero()\n","        self.predictions = []\n","        self.errors = []\n","        for x, y in zip(xs, ys):\n","            prediction = self.get_prediction(x, y)\n","            self.predictions.append(prediction)\n","            self.errors.append(self.R[x, y] - prediction)\n","\n","        self.predictions = np.array(self.predictions)\n","        self.errors = np.array(self.errors)\n","        return np.sqrt(np.mean(self.errors**2))\n","\n","    def get_prediction(self, i, j):\n","        prediction = self.b + self.b_u[i] + self.b_d[j] + self.P[i, :].dot(self.Q[j, :].T)\n","        return prediction\n","\n","    def sgd(self):\n","        for i, j, r in self.samples:\n","            prediction = self.get_prediction(i, j)\n","            e = (r - prediction)\n","\n","            self.b_u[i] += self.alpha * (e - self.beta * self.b_u[i])\n","            self.b_d[j] += self.alpha * (e - self.beta * self.b_d[j])\n","\n","            self.P[i, :] += self.alpha * (e * self.Q[j, :] - self.beta * self.P[i,:])\n","            self.Q[j, :] += self.alpha * (e * self.P[i, :] - self.beta * self.Q[j,:])\n","\n","    def set_test(self, ratings_test):\n","        test_set = []\n","        for i in range(len(ratings_test)):\n","            x = self.user_id_index[ratings_test.iloc[i, 0]]  # [i, 0] is user_id\n","            y = self.item_id_index[ratings_test.iloc[i, 1]]  # [i, 1] is movie_id\n","            z = ratings_test.iloc[i, 2]                      # [i, 2] is rating\n","            test_set.append([x, y, z])          # [user_idx, movie_idx, rating]\n","            self.R[x, y] = 0                    # set rating 0 cuz this x-y is used as test purpose\n","\n","        self.test_set = test_set\n","        return test_set\n","\n","    def test_rmse(self):\n","        error = 0\n","        for one_set in self.test_set:   # [user_idx, movie_idx, rating]\n","            predicted = self.get_prediction(one_set[0], one_set[1])\n","            error += pow(one_set[2] - predicted, 2)\n","        return np.sqrt(error/len(self.test_set))\n","\n","    def test(self):\n","        # Initializing user-feature and item-feature matrix\n","        self.P = np.random.normal(scale=1./self.K, size=(self.num_users, self.K))\n","        self.Q = np.random.normal(scale=1./self.K, size=(self.num_items, self.K))\n","\n","        # Initializing the bias terms\n","        self.b_u = np.zeros(self.num_users)\n","        self.b_d = np.zeros(self.num_items)\n","        self.b = np.mean(self.R[self.R.nonzero()])\n","\n","        # List of training samples\n","        rows, columns = self.R.nonzero()\n","        self.samples = [(i, j, self.R[i,j]) for i, j in zip(rows, columns)]\n","\n","        # Stochastic gradient descent for given number of iterations\n","        training_process = []\n","        for i in range(self.iterations):\n","            np.random.shuffle(self.samples)\n","            self.sgd()\n","            rmse1 = self.rmse()\n","            rmse2 = self.test_rmse()\n","            training_process.append((i+1, rmse1, rmse2))\n","\n","            if self.verbose:\n","                if (i + 1) % 10 == 0:\n","                    print(\"Iteration: %d ; Train RMSE = %.4f ; Test RMSE = %.4f\" % (i + 1, rmse1, rmse2))\n","        return training_process\n","\n","    # Ratings for given user_id and item_id\n","    def get_one_prediction(self, user_id, item_id):\n","        return self.get_prediction(self.user_id_index[user_id], self.item_id_index[item_id])\n","\n","    # Full user-movie rating matrix\n","    def full_prediction(self):\n","        return self.b + self.b_u[:,np.newaxis] + self.b_d[np.newaxis,:] + self.P.dot(self.Q.T)\n"],"metadata":{"id":"6V5ZQxrgSMdO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["results = []\n","index = []\n","\n","for K in range(50, 261, 10):\n","    print('K =', K)\n","    R_temp = ratings.pivot(index='user_id', columns='movie_id', values='rating').fillna(0)\n","    mf = NEW_MF(R_temp, K=K, alpha=0.001, beta=0.02, iterations=300, verbose=True)\n","    test_set = mf.set_test(ratings_test)\n","    result = mf.test()\n","\n","    index.append(K)\n","    results.append(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cqusk22TSOT8","outputId":"1aa36b27-c0f5-4927-bfdf-db00aca33bf5","executionInfo":{"status":"ok","timestamp":1648262216009,"user_tz":-540,"elapsed":4107965,"user":{"displayName":"Roy Son","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVMzhGmOLO-LtCUnDj98IHVt9qwUVSM38Ow5VCJA=s64","userId":"14004762039756736463"}}},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["K = 50\n","Iteration: 10 ; Train RMSE = 0.9661 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9414 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9305 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9241 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9198 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9164 ; Test RMSE = 0.9479\n","Iteration: 70 ; Train RMSE = 0.9135 ; Test RMSE = 0.9466\n","Iteration: 80 ; Train RMSE = 0.9105 ; Test RMSE = 0.9455\n","Iteration: 90 ; Train RMSE = 0.9071 ; Test RMSE = 0.9444\n","Iteration: 100 ; Train RMSE = 0.9028 ; Test RMSE = 0.9431\n","Iteration: 110 ; Train RMSE = 0.8970 ; Test RMSE = 0.9415\n","Iteration: 120 ; Train RMSE = 0.8891 ; Test RMSE = 0.9392\n","Iteration: 130 ; Train RMSE = 0.8786 ; Test RMSE = 0.9362\n","Iteration: 140 ; Train RMSE = 0.8655 ; Test RMSE = 0.9326\n","Iteration: 150 ; Train RMSE = 0.8501 ; Test RMSE = 0.9288\n","Iteration: 160 ; Train RMSE = 0.8330 ; Test RMSE = 0.9253\n","Iteration: 170 ; Train RMSE = 0.8146 ; Test RMSE = 0.9224\n","Iteration: 180 ; Train RMSE = 0.7952 ; Test RMSE = 0.9201\n","Iteration: 190 ; Train RMSE = 0.7748 ; Test RMSE = 0.9185\n","Iteration: 200 ; Train RMSE = 0.7536 ; Test RMSE = 0.9176\n","Iteration: 210 ; Train RMSE = 0.7320 ; Test RMSE = 0.9174\n","Iteration: 220 ; Train RMSE = 0.7101 ; Test RMSE = 0.9178\n","Iteration: 230 ; Train RMSE = 0.6883 ; Test RMSE = 0.9189\n","Iteration: 240 ; Train RMSE = 0.6668 ; Test RMSE = 0.9206\n","Iteration: 250 ; Train RMSE = 0.6459 ; Test RMSE = 0.9228\n","Iteration: 260 ; Train RMSE = 0.6256 ; Test RMSE = 0.9253\n","Iteration: 270 ; Train RMSE = 0.6063 ; Test RMSE = 0.9282\n","Iteration: 280 ; Train RMSE = 0.5878 ; Test RMSE = 0.9312\n","Iteration: 290 ; Train RMSE = 0.5703 ; Test RMSE = 0.9345\n","Iteration: 300 ; Train RMSE = 0.5537 ; Test RMSE = 0.9378\n","K = 60\n","Iteration: 10 ; Train RMSE = 0.9662 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9415 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9307 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9243 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9200 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9168 ; Test RMSE = 0.9479\n","Iteration: 70 ; Train RMSE = 0.9140 ; Test RMSE = 0.9466\n","Iteration: 80 ; Train RMSE = 0.9111 ; Test RMSE = 0.9455\n","Iteration: 90 ; Train RMSE = 0.9079 ; Test RMSE = 0.9444\n","Iteration: 100 ; Train RMSE = 0.9038 ; Test RMSE = 0.9432\n","Iteration: 110 ; Train RMSE = 0.8981 ; Test RMSE = 0.9415\n","Iteration: 120 ; Train RMSE = 0.8905 ; Test RMSE = 0.9391\n","Iteration: 130 ; Train RMSE = 0.8802 ; Test RMSE = 0.9360\n","Iteration: 140 ; Train RMSE = 0.8675 ; Test RMSE = 0.9323\n","Iteration: 150 ; Train RMSE = 0.8527 ; Test RMSE = 0.9286\n","Iteration: 160 ; Train RMSE = 0.8362 ; Test RMSE = 0.9251\n","Iteration: 170 ; Train RMSE = 0.8183 ; Test RMSE = 0.9221\n","Iteration: 180 ; Train RMSE = 0.7990 ; Test RMSE = 0.9196\n","Iteration: 190 ; Train RMSE = 0.7784 ; Test RMSE = 0.9178\n","Iteration: 200 ; Train RMSE = 0.7569 ; Test RMSE = 0.9167\n","Iteration: 210 ; Train RMSE = 0.7346 ; Test RMSE = 0.9164\n","Iteration: 220 ; Train RMSE = 0.7121 ; Test RMSE = 0.9169\n","Iteration: 230 ; Train RMSE = 0.6895 ; Test RMSE = 0.9181\n","Iteration: 240 ; Train RMSE = 0.6673 ; Test RMSE = 0.9199\n","Iteration: 250 ; Train RMSE = 0.6455 ; Test RMSE = 0.9223\n","Iteration: 260 ; Train RMSE = 0.6244 ; Test RMSE = 0.9250\n","Iteration: 270 ; Train RMSE = 0.6041 ; Test RMSE = 0.9279\n","Iteration: 280 ; Train RMSE = 0.5847 ; Test RMSE = 0.9311\n","Iteration: 290 ; Train RMSE = 0.5661 ; Test RMSE = 0.9344\n","Iteration: 300 ; Train RMSE = 0.5484 ; Test RMSE = 0.9377\n","K = 70\n","Iteration: 10 ; Train RMSE = 0.9662 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9416 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9308 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9245 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9204 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9172 ; Test RMSE = 0.9479\n","Iteration: 70 ; Train RMSE = 0.9146 ; Test RMSE = 0.9466\n","Iteration: 80 ; Train RMSE = 0.9120 ; Test RMSE = 0.9456\n","Iteration: 90 ; Train RMSE = 0.9092 ; Test RMSE = 0.9446\n","Iteration: 100 ; Train RMSE = 0.9057 ; Test RMSE = 0.9434\n","Iteration: 110 ; Train RMSE = 0.9009 ; Test RMSE = 0.9417\n","Iteration: 120 ; Train RMSE = 0.8944 ; Test RMSE = 0.9395\n","Iteration: 130 ; Train RMSE = 0.8854 ; Test RMSE = 0.9365\n","Iteration: 140 ; Train RMSE = 0.8740 ; Test RMSE = 0.9328\n","Iteration: 150 ; Train RMSE = 0.8603 ; Test RMSE = 0.9289\n","Iteration: 160 ; Train RMSE = 0.8448 ; Test RMSE = 0.9251\n","Iteration: 170 ; Train RMSE = 0.8277 ; Test RMSE = 0.9217\n","Iteration: 180 ; Train RMSE = 0.8091 ; Test RMSE = 0.9188\n","Iteration: 190 ; Train RMSE = 0.7890 ; Test RMSE = 0.9164\n","Iteration: 200 ; Train RMSE = 0.7678 ; Test RMSE = 0.9148\n","Iteration: 210 ; Train RMSE = 0.7455 ; Test RMSE = 0.9138\n","Iteration: 220 ; Train RMSE = 0.7227 ; Test RMSE = 0.9135\n","Iteration: 230 ; Train RMSE = 0.6995 ; Test RMSE = 0.9140\n","Iteration: 240 ; Train RMSE = 0.6763 ; Test RMSE = 0.9151\n","Iteration: 250 ; Train RMSE = 0.6534 ; Test RMSE = 0.9166\n","Iteration: 260 ; Train RMSE = 0.6309 ; Test RMSE = 0.9187\n","Iteration: 270 ; Train RMSE = 0.6091 ; Test RMSE = 0.9210\n","Iteration: 280 ; Train RMSE = 0.5881 ; Test RMSE = 0.9236\n","Iteration: 290 ; Train RMSE = 0.5679 ; Test RMSE = 0.9264\n","Iteration: 300 ; Train RMSE = 0.5486 ; Test RMSE = 0.9292\n","K = 80\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9417 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9309 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9247 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9206 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9175 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9149 ; Test RMSE = 0.9467\n","Iteration: 80 ; Train RMSE = 0.9125 ; Test RMSE = 0.9456\n","Iteration: 90 ; Train RMSE = 0.9099 ; Test RMSE = 0.9447\n","Iteration: 100 ; Train RMSE = 0.9066 ; Test RMSE = 0.9435\n","Iteration: 110 ; Train RMSE = 0.9022 ; Test RMSE = 0.9421\n","Iteration: 120 ; Train RMSE = 0.8961 ; Test RMSE = 0.9401\n","Iteration: 130 ; Train RMSE = 0.8878 ; Test RMSE = 0.9374\n","Iteration: 140 ; Train RMSE = 0.8771 ; Test RMSE = 0.9340\n","Iteration: 150 ; Train RMSE = 0.8642 ; Test RMSE = 0.9302\n","Iteration: 160 ; Train RMSE = 0.8494 ; Test RMSE = 0.9265\n","Iteration: 170 ; Train RMSE = 0.8330 ; Test RMSE = 0.9230\n","Iteration: 180 ; Train RMSE = 0.8151 ; Test RMSE = 0.9200\n","Iteration: 190 ; Train RMSE = 0.7957 ; Test RMSE = 0.9174\n","Iteration: 200 ; Train RMSE = 0.7748 ; Test RMSE = 0.9154\n","Iteration: 210 ; Train RMSE = 0.7528 ; Test RMSE = 0.9140\n","Iteration: 220 ; Train RMSE = 0.7299 ; Test RMSE = 0.9133\n","Iteration: 230 ; Train RMSE = 0.7066 ; Test RMSE = 0.9133\n","Iteration: 240 ; Train RMSE = 0.6831 ; Test RMSE = 0.9139\n","Iteration: 250 ; Train RMSE = 0.6597 ; Test RMSE = 0.9151\n","Iteration: 260 ; Train RMSE = 0.6367 ; Test RMSE = 0.9168\n","Iteration: 270 ; Train RMSE = 0.6142 ; Test RMSE = 0.9188\n","Iteration: 280 ; Train RMSE = 0.5924 ; Test RMSE = 0.9211\n","Iteration: 290 ; Train RMSE = 0.5714 ; Test RMSE = 0.9237\n","Iteration: 300 ; Train RMSE = 0.5512 ; Test RMSE = 0.9263\n","K = 90\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9417 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9310 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9248 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9207 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9177 ; Test RMSE = 0.9479\n","Iteration: 70 ; Train RMSE = 0.9152 ; Test RMSE = 0.9467\n","Iteration: 80 ; Train RMSE = 0.9129 ; Test RMSE = 0.9456\n","Iteration: 90 ; Train RMSE = 0.9104 ; Test RMSE = 0.9447\n","Iteration: 100 ; Train RMSE = 0.9073 ; Test RMSE = 0.9436\n","Iteration: 110 ; Train RMSE = 0.9031 ; Test RMSE = 0.9422\n","Iteration: 120 ; Train RMSE = 0.8974 ; Test RMSE = 0.9401\n","Iteration: 130 ; Train RMSE = 0.8895 ; Test RMSE = 0.9373\n","Iteration: 140 ; Train RMSE = 0.8790 ; Test RMSE = 0.9338\n","Iteration: 150 ; Train RMSE = 0.8663 ; Test RMSE = 0.9298\n","Iteration: 160 ; Train RMSE = 0.8518 ; Test RMSE = 0.9258\n","Iteration: 170 ; Train RMSE = 0.8357 ; Test RMSE = 0.9222\n","Iteration: 180 ; Train RMSE = 0.8183 ; Test RMSE = 0.9190\n","Iteration: 190 ; Train RMSE = 0.7994 ; Test RMSE = 0.9163\n","Iteration: 200 ; Train RMSE = 0.7791 ; Test RMSE = 0.9142\n","Iteration: 210 ; Train RMSE = 0.7576 ; Test RMSE = 0.9127\n","Iteration: 220 ; Train RMSE = 0.7351 ; Test RMSE = 0.9119\n","Iteration: 230 ; Train RMSE = 0.7119 ; Test RMSE = 0.9118\n","Iteration: 240 ; Train RMSE = 0.6883 ; Test RMSE = 0.9123\n","Iteration: 250 ; Train RMSE = 0.6647 ; Test RMSE = 0.9134\n","Iteration: 260 ; Train RMSE = 0.6413 ; Test RMSE = 0.9150\n","Iteration: 270 ; Train RMSE = 0.6183 ; Test RMSE = 0.9169\n","Iteration: 280 ; Train RMSE = 0.5958 ; Test RMSE = 0.9192\n","Iteration: 290 ; Train RMSE = 0.5741 ; Test RMSE = 0.9216\n","Iteration: 300 ; Train RMSE = 0.5532 ; Test RMSE = 0.9242\n","K = 100\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9418 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9310 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9249 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9208 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9178 ; Test RMSE = 0.9479\n","Iteration: 70 ; Train RMSE = 0.9154 ; Test RMSE = 0.9466\n","Iteration: 80 ; Train RMSE = 0.9131 ; Test RMSE = 0.9456\n","Iteration: 90 ; Train RMSE = 0.9106 ; Test RMSE = 0.9446\n","Iteration: 100 ; Train RMSE = 0.9075 ; Test RMSE = 0.9435\n","Iteration: 110 ; Train RMSE = 0.9034 ; Test RMSE = 0.9420\n","Iteration: 120 ; Train RMSE = 0.8977 ; Test RMSE = 0.9400\n","Iteration: 130 ; Train RMSE = 0.8900 ; Test RMSE = 0.9372\n","Iteration: 140 ; Train RMSE = 0.8801 ; Test RMSE = 0.9338\n","Iteration: 150 ; Train RMSE = 0.8682 ; Test RMSE = 0.9301\n","Iteration: 160 ; Train RMSE = 0.8547 ; Test RMSE = 0.9264\n","Iteration: 170 ; Train RMSE = 0.8398 ; Test RMSE = 0.9230\n","Iteration: 180 ; Train RMSE = 0.8233 ; Test RMSE = 0.9198\n","Iteration: 190 ; Train RMSE = 0.8051 ; Test RMSE = 0.9171\n","Iteration: 200 ; Train RMSE = 0.7854 ; Test RMSE = 0.9147\n","Iteration: 210 ; Train RMSE = 0.7643 ; Test RMSE = 0.9129\n","Iteration: 220 ; Train RMSE = 0.7420 ; Test RMSE = 0.9117\n","Iteration: 230 ; Train RMSE = 0.7188 ; Test RMSE = 0.9111\n","Iteration: 240 ; Train RMSE = 0.6950 ; Test RMSE = 0.9110\n","Iteration: 250 ; Train RMSE = 0.6710 ; Test RMSE = 0.9115\n","Iteration: 260 ; Train RMSE = 0.6470 ; Test RMSE = 0.9125\n","Iteration: 270 ; Train RMSE = 0.6234 ; Test RMSE = 0.9139\n","Iteration: 280 ; Train RMSE = 0.6004 ; Test RMSE = 0.9156\n","Iteration: 290 ; Train RMSE = 0.5780 ; Test RMSE = 0.9176\n","Iteration: 300 ; Train RMSE = 0.5565 ; Test RMSE = 0.9198\n","K = 110\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9833\n","Iteration: 20 ; Train RMSE = 0.9418 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9311 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9249 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9209 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9180 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9156 ; Test RMSE = 0.9467\n","Iteration: 80 ; Train RMSE = 0.9134 ; Test RMSE = 0.9457\n","Iteration: 90 ; Train RMSE = 0.9111 ; Test RMSE = 0.9448\n","Iteration: 100 ; Train RMSE = 0.9083 ; Test RMSE = 0.9438\n","Iteration: 110 ; Train RMSE = 0.9046 ; Test RMSE = 0.9424\n","Iteration: 120 ; Train RMSE = 0.8994 ; Test RMSE = 0.9406\n","Iteration: 130 ; Train RMSE = 0.8924 ; Test RMSE = 0.9381\n","Iteration: 140 ; Train RMSE = 0.8831 ; Test RMSE = 0.9349\n","Iteration: 150 ; Train RMSE = 0.8720 ; Test RMSE = 0.9314\n","Iteration: 160 ; Train RMSE = 0.8591 ; Test RMSE = 0.9278\n","Iteration: 170 ; Train RMSE = 0.8447 ; Test RMSE = 0.9243\n","Iteration: 180 ; Train RMSE = 0.8287 ; Test RMSE = 0.9211\n","Iteration: 190 ; Train RMSE = 0.8109 ; Test RMSE = 0.9182\n","Iteration: 200 ; Train RMSE = 0.7914 ; Test RMSE = 0.9156\n","Iteration: 210 ; Train RMSE = 0.7704 ; Test RMSE = 0.9136\n","Iteration: 220 ; Train RMSE = 0.7481 ; Test RMSE = 0.9122\n","Iteration: 230 ; Train RMSE = 0.7249 ; Test RMSE = 0.9114\n","Iteration: 240 ; Train RMSE = 0.7011 ; Test RMSE = 0.9113\n","Iteration: 250 ; Train RMSE = 0.6769 ; Test RMSE = 0.9118\n","Iteration: 260 ; Train RMSE = 0.6528 ; Test RMSE = 0.9128\n","Iteration: 270 ; Train RMSE = 0.6290 ; Test RMSE = 0.9143\n","Iteration: 280 ; Train RMSE = 0.6056 ; Test RMSE = 0.9161\n","Iteration: 290 ; Train RMSE = 0.5829 ; Test RMSE = 0.9181\n","Iteration: 300 ; Train RMSE = 0.5610 ; Test RMSE = 0.9204\n","K = 120\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9418 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9311 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9250 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9210 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9181 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9158 ; Test RMSE = 0.9467\n","Iteration: 80 ; Train RMSE = 0.9137 ; Test RMSE = 0.9457\n","Iteration: 90 ; Train RMSE = 0.9115 ; Test RMSE = 0.9448\n","Iteration: 100 ; Train RMSE = 0.9088 ; Test RMSE = 0.9438\n","Iteration: 110 ; Train RMSE = 0.9053 ; Test RMSE = 0.9425\n","Iteration: 120 ; Train RMSE = 0.9005 ; Test RMSE = 0.9407\n","Iteration: 130 ; Train RMSE = 0.8937 ; Test RMSE = 0.9382\n","Iteration: 140 ; Train RMSE = 0.8848 ; Test RMSE = 0.9350\n","Iteration: 150 ; Train RMSE = 0.8738 ; Test RMSE = 0.9314\n","Iteration: 160 ; Train RMSE = 0.8612 ; Test RMSE = 0.9278\n","Iteration: 170 ; Train RMSE = 0.8472 ; Test RMSE = 0.9244\n","Iteration: 180 ; Train RMSE = 0.8317 ; Test RMSE = 0.9212\n","Iteration: 190 ; Train RMSE = 0.8145 ; Test RMSE = 0.9184\n","Iteration: 200 ; Train RMSE = 0.7956 ; Test RMSE = 0.9160\n","Iteration: 210 ; Train RMSE = 0.7751 ; Test RMSE = 0.9140\n","Iteration: 220 ; Train RMSE = 0.7533 ; Test RMSE = 0.9127\n","Iteration: 230 ; Train RMSE = 0.7303 ; Test RMSE = 0.9119\n","Iteration: 240 ; Train RMSE = 0.7067 ; Test RMSE = 0.9118\n","Iteration: 250 ; Train RMSE = 0.6827 ; Test RMSE = 0.9123\n","Iteration: 260 ; Train RMSE = 0.6586 ; Test RMSE = 0.9134\n","Iteration: 270 ; Train RMSE = 0.6348 ; Test RMSE = 0.9148\n","Iteration: 280 ; Train RMSE = 0.6114 ; Test RMSE = 0.9166\n","Iteration: 290 ; Train RMSE = 0.5885 ; Test RMSE = 0.9187\n","Iteration: 300 ; Train RMSE = 0.5663 ; Test RMSE = 0.9208\n","K = 130\n","Iteration: 10 ; Train RMSE = 0.9663 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9312 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9251 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9211 ; Test RMSE = 0.9498\n","Iteration: 60 ; Train RMSE = 0.9182 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9160 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9140 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9120 ; Test RMSE = 0.9451\n","Iteration: 100 ; Train RMSE = 0.9097 ; Test RMSE = 0.9443\n","Iteration: 110 ; Train RMSE = 0.9068 ; Test RMSE = 0.9433\n","Iteration: 120 ; Train RMSE = 0.9028 ; Test RMSE = 0.9421\n","Iteration: 130 ; Train RMSE = 0.8972 ; Test RMSE = 0.9402\n","Iteration: 140 ; Train RMSE = 0.8893 ; Test RMSE = 0.9376\n","Iteration: 150 ; Train RMSE = 0.8790 ; Test RMSE = 0.9343\n","Iteration: 160 ; Train RMSE = 0.8662 ; Test RMSE = 0.9304\n","Iteration: 170 ; Train RMSE = 0.8515 ; Test RMSE = 0.9265\n","Iteration: 180 ; Train RMSE = 0.8352 ; Test RMSE = 0.9228\n","Iteration: 190 ; Train RMSE = 0.8175 ; Test RMSE = 0.9196\n","Iteration: 200 ; Train RMSE = 0.7982 ; Test RMSE = 0.9169\n","Iteration: 210 ; Train RMSE = 0.7774 ; Test RMSE = 0.9146\n","Iteration: 220 ; Train RMSE = 0.7554 ; Test RMSE = 0.9130\n","Iteration: 230 ; Train RMSE = 0.7324 ; Test RMSE = 0.9121\n","Iteration: 240 ; Train RMSE = 0.7087 ; Test RMSE = 0.9117\n","Iteration: 250 ; Train RMSE = 0.6847 ; Test RMSE = 0.9120\n","Iteration: 260 ; Train RMSE = 0.6607 ; Test RMSE = 0.9128\n","Iteration: 270 ; Train RMSE = 0.6368 ; Test RMSE = 0.9141\n","Iteration: 280 ; Train RMSE = 0.6132 ; Test RMSE = 0.9157\n","Iteration: 290 ; Train RMSE = 0.5903 ; Test RMSE = 0.9176\n","Iteration: 300 ; Train RMSE = 0.5679 ; Test RMSE = 0.9196\n","K = 140\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9312 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9251 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9211 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9183 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9161 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9141 ; Test RMSE = 0.9458\n","Iteration: 90 ; Train RMSE = 0.9122 ; Test RMSE = 0.9450\n","Iteration: 100 ; Train RMSE = 0.9100 ; Test RMSE = 0.9442\n","Iteration: 110 ; Train RMSE = 0.9071 ; Test RMSE = 0.9432\n","Iteration: 120 ; Train RMSE = 0.9032 ; Test RMSE = 0.9418\n","Iteration: 130 ; Train RMSE = 0.8976 ; Test RMSE = 0.9398\n","Iteration: 140 ; Train RMSE = 0.8898 ; Test RMSE = 0.9370\n","Iteration: 150 ; Train RMSE = 0.8798 ; Test RMSE = 0.9335\n","Iteration: 160 ; Train RMSE = 0.8676 ; Test RMSE = 0.9296\n","Iteration: 170 ; Train RMSE = 0.8537 ; Test RMSE = 0.9258\n","Iteration: 180 ; Train RMSE = 0.8384 ; Test RMSE = 0.9223\n","Iteration: 190 ; Train RMSE = 0.8214 ; Test RMSE = 0.9192\n","Iteration: 200 ; Train RMSE = 0.8029 ; Test RMSE = 0.9165\n","Iteration: 210 ; Train RMSE = 0.7827 ; Test RMSE = 0.9142\n","Iteration: 220 ; Train RMSE = 0.7611 ; Test RMSE = 0.9124\n","Iteration: 230 ; Train RMSE = 0.7382 ; Test RMSE = 0.9112\n","Iteration: 240 ; Train RMSE = 0.7146 ; Test RMSE = 0.9107\n","Iteration: 250 ; Train RMSE = 0.6904 ; Test RMSE = 0.9107\n","Iteration: 260 ; Train RMSE = 0.6661 ; Test RMSE = 0.9113\n","Iteration: 270 ; Train RMSE = 0.6420 ; Test RMSE = 0.9125\n","Iteration: 280 ; Train RMSE = 0.6182 ; Test RMSE = 0.9139\n","Iteration: 290 ; Train RMSE = 0.5949 ; Test RMSE = 0.9157\n","Iteration: 300 ; Train RMSE = 0.5723 ; Test RMSE = 0.9177\n","K = 150\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9312 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9251 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9212 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9183 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9161 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9142 ; Test RMSE = 0.9458\n","Iteration: 90 ; Train RMSE = 0.9122 ; Test RMSE = 0.9449\n","Iteration: 100 ; Train RMSE = 0.9099 ; Test RMSE = 0.9440\n","Iteration: 110 ; Train RMSE = 0.9070 ; Test RMSE = 0.9429\n","Iteration: 120 ; Train RMSE = 0.9029 ; Test RMSE = 0.9414\n","Iteration: 130 ; Train RMSE = 0.8971 ; Test RMSE = 0.9391\n","Iteration: 140 ; Train RMSE = 0.8892 ; Test RMSE = 0.9361\n","Iteration: 150 ; Train RMSE = 0.8790 ; Test RMSE = 0.9324\n","Iteration: 160 ; Train RMSE = 0.8668 ; Test RMSE = 0.9286\n","Iteration: 170 ; Train RMSE = 0.8531 ; Test RMSE = 0.9248\n","Iteration: 180 ; Train RMSE = 0.8379 ; Test RMSE = 0.9214\n","Iteration: 190 ; Train RMSE = 0.8211 ; Test RMSE = 0.9183\n","Iteration: 200 ; Train RMSE = 0.8028 ; Test RMSE = 0.9156\n","Iteration: 210 ; Train RMSE = 0.7830 ; Test RMSE = 0.9133\n","Iteration: 220 ; Train RMSE = 0.7619 ; Test RMSE = 0.9116\n","Iteration: 230 ; Train RMSE = 0.7396 ; Test RMSE = 0.9105\n","Iteration: 240 ; Train RMSE = 0.7164 ; Test RMSE = 0.9100\n","Iteration: 250 ; Train RMSE = 0.6926 ; Test RMSE = 0.9101\n","Iteration: 260 ; Train RMSE = 0.6686 ; Test RMSE = 0.9107\n","Iteration: 270 ; Train RMSE = 0.6445 ; Test RMSE = 0.9118\n","Iteration: 280 ; Train RMSE = 0.6206 ; Test RMSE = 0.9133\n","Iteration: 290 ; Train RMSE = 0.5971 ; Test RMSE = 0.9150\n","Iteration: 300 ; Train RMSE = 0.5742 ; Test RMSE = 0.9170\n","K = 160\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9312 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9252 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9212 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9184 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9163 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9144 ; Test RMSE = 0.9458\n","Iteration: 90 ; Train RMSE = 0.9126 ; Test RMSE = 0.9451\n","Iteration: 100 ; Train RMSE = 0.9105 ; Test RMSE = 0.9442\n","Iteration: 110 ; Train RMSE = 0.9079 ; Test RMSE = 0.9433\n","Iteration: 120 ; Train RMSE = 0.9042 ; Test RMSE = 0.9419\n","Iteration: 130 ; Train RMSE = 0.8991 ; Test RMSE = 0.9400\n","Iteration: 140 ; Train RMSE = 0.8919 ; Test RMSE = 0.9373\n","Iteration: 150 ; Train RMSE = 0.8825 ; Test RMSE = 0.9339\n","Iteration: 160 ; Train RMSE = 0.8710 ; Test RMSE = 0.9301\n","Iteration: 170 ; Train RMSE = 0.8578 ; Test RMSE = 0.9264\n","Iteration: 180 ; Train RMSE = 0.8430 ; Test RMSE = 0.9228\n","Iteration: 190 ; Train RMSE = 0.8266 ; Test RMSE = 0.9195\n","Iteration: 200 ; Train RMSE = 0.8086 ; Test RMSE = 0.9165\n","Iteration: 210 ; Train RMSE = 0.7889 ; Test RMSE = 0.9139\n","Iteration: 220 ; Train RMSE = 0.7678 ; Test RMSE = 0.9117\n","Iteration: 230 ; Train RMSE = 0.7455 ; Test RMSE = 0.9103\n","Iteration: 240 ; Train RMSE = 0.7223 ; Test RMSE = 0.9094\n","Iteration: 250 ; Train RMSE = 0.6986 ; Test RMSE = 0.9093\n","Iteration: 260 ; Train RMSE = 0.6745 ; Test RMSE = 0.9097\n","Iteration: 270 ; Train RMSE = 0.6505 ; Test RMSE = 0.9106\n","Iteration: 280 ; Train RMSE = 0.6266 ; Test RMSE = 0.9119\n","Iteration: 290 ; Train RMSE = 0.6030 ; Test RMSE = 0.9135\n","Iteration: 300 ; Train RMSE = 0.5800 ; Test RMSE = 0.9153\n","K = 170\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9252 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9213 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9185 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9164 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9145 ; Test RMSE = 0.9458\n","Iteration: 90 ; Train RMSE = 0.9127 ; Test RMSE = 0.9451\n","Iteration: 100 ; Train RMSE = 0.9107 ; Test RMSE = 0.9442\n","Iteration: 110 ; Train RMSE = 0.9081 ; Test RMSE = 0.9433\n","Iteration: 120 ; Train RMSE = 0.9046 ; Test RMSE = 0.9420\n","Iteration: 130 ; Train RMSE = 0.8996 ; Test RMSE = 0.9401\n","Iteration: 140 ; Train RMSE = 0.8926 ; Test RMSE = 0.9374\n","Iteration: 150 ; Train RMSE = 0.8834 ; Test RMSE = 0.9341\n","Iteration: 160 ; Train RMSE = 0.8721 ; Test RMSE = 0.9303\n","Iteration: 170 ; Train RMSE = 0.8592 ; Test RMSE = 0.9265\n","Iteration: 180 ; Train RMSE = 0.8449 ; Test RMSE = 0.9231\n","Iteration: 190 ; Train RMSE = 0.8292 ; Test RMSE = 0.9200\n","Iteration: 200 ; Train RMSE = 0.8120 ; Test RMSE = 0.9172\n","Iteration: 210 ; Train RMSE = 0.7930 ; Test RMSE = 0.9148\n","Iteration: 220 ; Train RMSE = 0.7725 ; Test RMSE = 0.9129\n","Iteration: 230 ; Train RMSE = 0.7507 ; Test RMSE = 0.9115\n","Iteration: 240 ; Train RMSE = 0.7277 ; Test RMSE = 0.9108\n","Iteration: 250 ; Train RMSE = 0.7040 ; Test RMSE = 0.9107\n","Iteration: 260 ; Train RMSE = 0.6798 ; Test RMSE = 0.9111\n","Iteration: 270 ; Train RMSE = 0.6556 ; Test RMSE = 0.9121\n","Iteration: 280 ; Train RMSE = 0.6315 ; Test RMSE = 0.9135\n","Iteration: 290 ; Train RMSE = 0.6077 ; Test RMSE = 0.9152\n","Iteration: 300 ; Train RMSE = 0.5845 ; Test RMSE = 0.9172\n","K = 180\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9419 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9252 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9213 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9186 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9164 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9146 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9128 ; Test RMSE = 0.9451\n","Iteration: 100 ; Train RMSE = 0.9109 ; Test RMSE = 0.9443\n","Iteration: 110 ; Train RMSE = 0.9084 ; Test RMSE = 0.9434\n","Iteration: 120 ; Train RMSE = 0.9050 ; Test RMSE = 0.9421\n","Iteration: 130 ; Train RMSE = 0.9002 ; Test RMSE = 0.9403\n","Iteration: 140 ; Train RMSE = 0.8933 ; Test RMSE = 0.9377\n","Iteration: 150 ; Train RMSE = 0.8843 ; Test RMSE = 0.9343\n","Iteration: 160 ; Train RMSE = 0.8731 ; Test RMSE = 0.9305\n","Iteration: 170 ; Train RMSE = 0.8604 ; Test RMSE = 0.9267\n","Iteration: 180 ; Train RMSE = 0.8463 ; Test RMSE = 0.9232\n","Iteration: 190 ; Train RMSE = 0.8309 ; Test RMSE = 0.9201\n","Iteration: 200 ; Train RMSE = 0.8140 ; Test RMSE = 0.9172\n","Iteration: 210 ; Train RMSE = 0.7955 ; Test RMSE = 0.9148\n","Iteration: 220 ; Train RMSE = 0.7754 ; Test RMSE = 0.9128\n","Iteration: 230 ; Train RMSE = 0.7539 ; Test RMSE = 0.9113\n","Iteration: 240 ; Train RMSE = 0.7313 ; Test RMSE = 0.9103\n","Iteration: 250 ; Train RMSE = 0.7078 ; Test RMSE = 0.9099\n","Iteration: 260 ; Train RMSE = 0.6837 ; Test RMSE = 0.9101\n","Iteration: 270 ; Train RMSE = 0.6595 ; Test RMSE = 0.9107\n","Iteration: 280 ; Train RMSE = 0.6353 ; Test RMSE = 0.9118\n","Iteration: 290 ; Train RMSE = 0.6114 ; Test RMSE = 0.9132\n","Iteration: 300 ; Train RMSE = 0.5879 ; Test RMSE = 0.9148\n","K = 190\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9214 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9186 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9165 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9147 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9130 ; Test RMSE = 0.9451\n","Iteration: 100 ; Train RMSE = 0.9111 ; Test RMSE = 0.9444\n","Iteration: 110 ; Train RMSE = 0.9088 ; Test RMSE = 0.9435\n","Iteration: 120 ; Train RMSE = 0.9056 ; Test RMSE = 0.9424\n","Iteration: 130 ; Train RMSE = 0.9011 ; Test RMSE = 0.9406\n","Iteration: 140 ; Train RMSE = 0.8946 ; Test RMSE = 0.9382\n","Iteration: 150 ; Train RMSE = 0.8860 ; Test RMSE = 0.9350\n","Iteration: 160 ; Train RMSE = 0.8751 ; Test RMSE = 0.9313\n","Iteration: 170 ; Train RMSE = 0.8625 ; Test RMSE = 0.9274\n","Iteration: 180 ; Train RMSE = 0.8485 ; Test RMSE = 0.9237\n","Iteration: 190 ; Train RMSE = 0.8330 ; Test RMSE = 0.9204\n","Iteration: 200 ; Train RMSE = 0.8160 ; Test RMSE = 0.9173\n","Iteration: 210 ; Train RMSE = 0.7974 ; Test RMSE = 0.9147\n","Iteration: 220 ; Train RMSE = 0.7773 ; Test RMSE = 0.9125\n","Iteration: 230 ; Train RMSE = 0.7559 ; Test RMSE = 0.9109\n","Iteration: 240 ; Train RMSE = 0.7334 ; Test RMSE = 0.9099\n","Iteration: 250 ; Train RMSE = 0.7100 ; Test RMSE = 0.9095\n","Iteration: 260 ; Train RMSE = 0.6862 ; Test RMSE = 0.9097\n","Iteration: 270 ; Train RMSE = 0.6620 ; Test RMSE = 0.9104\n","Iteration: 280 ; Train RMSE = 0.6379 ; Test RMSE = 0.9115\n","Iteration: 290 ; Train RMSE = 0.6140 ; Test RMSE = 0.9129\n","Iteration: 300 ; Train RMSE = 0.5905 ; Test RMSE = 0.9146\n","K = 200\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9214 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9186 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9166 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9148 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9131 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9113 ; Test RMSE = 0.9445\n","Iteration: 110 ; Train RMSE = 0.9091 ; Test RMSE = 0.9437\n","Iteration: 120 ; Train RMSE = 0.9061 ; Test RMSE = 0.9426\n","Iteration: 130 ; Train RMSE = 0.9019 ; Test RMSE = 0.9411\n","Iteration: 140 ; Train RMSE = 0.8959 ; Test RMSE = 0.9389\n","Iteration: 150 ; Train RMSE = 0.8877 ; Test RMSE = 0.9359\n","Iteration: 160 ; Train RMSE = 0.8774 ; Test RMSE = 0.9324\n","Iteration: 170 ; Train RMSE = 0.8653 ; Test RMSE = 0.9287\n","Iteration: 180 ; Train RMSE = 0.8516 ; Test RMSE = 0.9251\n","Iteration: 190 ; Train RMSE = 0.8365 ; Test RMSE = 0.9217\n","Iteration: 200 ; Train RMSE = 0.8198 ; Test RMSE = 0.9186\n","Iteration: 210 ; Train RMSE = 0.8015 ; Test RMSE = 0.9159\n","Iteration: 220 ; Train RMSE = 0.7816 ; Test RMSE = 0.9137\n","Iteration: 230 ; Train RMSE = 0.7602 ; Test RMSE = 0.9120\n","Iteration: 240 ; Train RMSE = 0.7377 ; Test RMSE = 0.9109\n","Iteration: 250 ; Train RMSE = 0.7143 ; Test RMSE = 0.9103\n","Iteration: 260 ; Train RMSE = 0.6903 ; Test RMSE = 0.9104\n","Iteration: 270 ; Train RMSE = 0.6661 ; Test RMSE = 0.9110\n","Iteration: 280 ; Train RMSE = 0.6419 ; Test RMSE = 0.9120\n","Iteration: 290 ; Train RMSE = 0.6178 ; Test RMSE = 0.9133\n","Iteration: 300 ; Train RMSE = 0.5942 ; Test RMSE = 0.9149\n","K = 210\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9214 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9187 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9166 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9149 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9132 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9114 ; Test RMSE = 0.9444\n","Iteration: 110 ; Train RMSE = 0.9092 ; Test RMSE = 0.9436\n","Iteration: 120 ; Train RMSE = 0.9063 ; Test RMSE = 0.9425\n","Iteration: 130 ; Train RMSE = 0.9021 ; Test RMSE = 0.9409\n","Iteration: 140 ; Train RMSE = 0.8962 ; Test RMSE = 0.9387\n","Iteration: 150 ; Train RMSE = 0.8881 ; Test RMSE = 0.9357\n","Iteration: 160 ; Train RMSE = 0.8779 ; Test RMSE = 0.9321\n","Iteration: 170 ; Train RMSE = 0.8660 ; Test RMSE = 0.9283\n","Iteration: 180 ; Train RMSE = 0.8526 ; Test RMSE = 0.9247\n","Iteration: 190 ; Train RMSE = 0.8377 ; Test RMSE = 0.9213\n","Iteration: 200 ; Train RMSE = 0.8212 ; Test RMSE = 0.9182\n","Iteration: 210 ; Train RMSE = 0.8032 ; Test RMSE = 0.9153\n","Iteration: 220 ; Train RMSE = 0.7835 ; Test RMSE = 0.9129\n","Iteration: 230 ; Train RMSE = 0.7625 ; Test RMSE = 0.9111\n","Iteration: 240 ; Train RMSE = 0.7402 ; Test RMSE = 0.9098\n","Iteration: 250 ; Train RMSE = 0.7171 ; Test RMSE = 0.9091\n","Iteration: 260 ; Train RMSE = 0.6934 ; Test RMSE = 0.9090\n","Iteration: 270 ; Train RMSE = 0.6693 ; Test RMSE = 0.9093\n","Iteration: 280 ; Train RMSE = 0.6452 ; Test RMSE = 0.9101\n","Iteration: 290 ; Train RMSE = 0.6213 ; Test RMSE = 0.9113\n","Iteration: 300 ; Train RMSE = 0.5977 ; Test RMSE = 0.9127\n","K = 220\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9833\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9313 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9214 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9187 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9166 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9149 ; Test RMSE = 0.9460\n","Iteration: 90 ; Train RMSE = 0.9133 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9115 ; Test RMSE = 0.9445\n","Iteration: 110 ; Train RMSE = 0.9094 ; Test RMSE = 0.9437\n","Iteration: 120 ; Train RMSE = 0.9066 ; Test RMSE = 0.9427\n","Iteration: 130 ; Train RMSE = 0.9026 ; Test RMSE = 0.9413\n","Iteration: 140 ; Train RMSE = 0.8968 ; Test RMSE = 0.9391\n","Iteration: 150 ; Train RMSE = 0.8889 ; Test RMSE = 0.9362\n","Iteration: 160 ; Train RMSE = 0.8788 ; Test RMSE = 0.9327\n","Iteration: 170 ; Train RMSE = 0.8669 ; Test RMSE = 0.9290\n","Iteration: 180 ; Train RMSE = 0.8535 ; Test RMSE = 0.9253\n","Iteration: 190 ; Train RMSE = 0.8387 ; Test RMSE = 0.9220\n","Iteration: 200 ; Train RMSE = 0.8225 ; Test RMSE = 0.9189\n","Iteration: 210 ; Train RMSE = 0.8048 ; Test RMSE = 0.9162\n","Iteration: 220 ; Train RMSE = 0.7856 ; Test RMSE = 0.9139\n","Iteration: 230 ; Train RMSE = 0.7649 ; Test RMSE = 0.9120\n","Iteration: 240 ; Train RMSE = 0.7430 ; Test RMSE = 0.9107\n","Iteration: 250 ; Train RMSE = 0.7201 ; Test RMSE = 0.9100\n","Iteration: 260 ; Train RMSE = 0.6965 ; Test RMSE = 0.9098\n","Iteration: 270 ; Train RMSE = 0.6725 ; Test RMSE = 0.9100\n","Iteration: 280 ; Train RMSE = 0.6483 ; Test RMSE = 0.9107\n","Iteration: 290 ; Train RMSE = 0.6243 ; Test RMSE = 0.9118\n","Iteration: 300 ; Train RMSE = 0.6005 ; Test RMSE = 0.9131\n","K = 230\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9314 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9215 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9187 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9167 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9150 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9133 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9116 ; Test RMSE = 0.9445\n","Iteration: 110 ; Train RMSE = 0.9096 ; Test RMSE = 0.9437\n","Iteration: 120 ; Train RMSE = 0.9068 ; Test RMSE = 0.9426\n","Iteration: 130 ; Train RMSE = 0.9028 ; Test RMSE = 0.9411\n","Iteration: 140 ; Train RMSE = 0.8971 ; Test RMSE = 0.9389\n","Iteration: 150 ; Train RMSE = 0.8892 ; Test RMSE = 0.9359\n","Iteration: 160 ; Train RMSE = 0.8791 ; Test RMSE = 0.9322\n","Iteration: 170 ; Train RMSE = 0.8672 ; Test RMSE = 0.9283\n","Iteration: 180 ; Train RMSE = 0.8538 ; Test RMSE = 0.9246\n","Iteration: 190 ; Train RMSE = 0.8392 ; Test RMSE = 0.9212\n","Iteration: 200 ; Train RMSE = 0.8232 ; Test RMSE = 0.9182\n","Iteration: 210 ; Train RMSE = 0.8057 ; Test RMSE = 0.9155\n","Iteration: 220 ; Train RMSE = 0.7867 ; Test RMSE = 0.9133\n","Iteration: 230 ; Train RMSE = 0.7662 ; Test RMSE = 0.9116\n","Iteration: 240 ; Train RMSE = 0.7445 ; Test RMSE = 0.9104\n","Iteration: 250 ; Train RMSE = 0.7218 ; Test RMSE = 0.9098\n","Iteration: 260 ; Train RMSE = 0.6983 ; Test RMSE = 0.9098\n","Iteration: 270 ; Train RMSE = 0.6744 ; Test RMSE = 0.9103\n","Iteration: 280 ; Train RMSE = 0.6504 ; Test RMSE = 0.9113\n","Iteration: 290 ; Train RMSE = 0.6264 ; Test RMSE = 0.9126\n","Iteration: 300 ; Train RMSE = 0.6027 ; Test RMSE = 0.9142\n","K = 240\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9314 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9253 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9215 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9188 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9167 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9150 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9135 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9118 ; Test RMSE = 0.9445\n","Iteration: 110 ; Train RMSE = 0.9099 ; Test RMSE = 0.9438\n","Iteration: 120 ; Train RMSE = 0.9073 ; Test RMSE = 0.9428\n","Iteration: 130 ; Train RMSE = 0.9036 ; Test RMSE = 0.9414\n","Iteration: 140 ; Train RMSE = 0.8983 ; Test RMSE = 0.9392\n","Iteration: 150 ; Train RMSE = 0.8909 ; Test RMSE = 0.9364\n","Iteration: 160 ; Train RMSE = 0.8813 ; Test RMSE = 0.9328\n","Iteration: 170 ; Train RMSE = 0.8698 ; Test RMSE = 0.9290\n","Iteration: 180 ; Train RMSE = 0.8568 ; Test RMSE = 0.9253\n","Iteration: 190 ; Train RMSE = 0.8425 ; Test RMSE = 0.9220\n","Iteration: 200 ; Train RMSE = 0.8267 ; Test RMSE = 0.9189\n","Iteration: 210 ; Train RMSE = 0.8093 ; Test RMSE = 0.9161\n","Iteration: 220 ; Train RMSE = 0.7902 ; Test RMSE = 0.9138\n","Iteration: 230 ; Train RMSE = 0.7696 ; Test RMSE = 0.9119\n","Iteration: 240 ; Train RMSE = 0.7477 ; Test RMSE = 0.9105\n","Iteration: 250 ; Train RMSE = 0.7247 ; Test RMSE = 0.9097\n","Iteration: 260 ; Train RMSE = 0.7009 ; Test RMSE = 0.9095\n","Iteration: 270 ; Train RMSE = 0.6767 ; Test RMSE = 0.9098\n","Iteration: 280 ; Train RMSE = 0.6524 ; Test RMSE = 0.9105\n","Iteration: 290 ; Train RMSE = 0.6282 ; Test RMSE = 0.9117\n","Iteration: 300 ; Train RMSE = 0.6044 ; Test RMSE = 0.9131\n","K = 250\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9644\n","Iteration: 30 ; Train RMSE = 0.9314 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9254 ; Test RMSE = 0.9523\n","Iteration: 50 ; Train RMSE = 0.9215 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9188 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9168 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9151 ; Test RMSE = 0.9460\n","Iteration: 90 ; Train RMSE = 0.9135 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9119 ; Test RMSE = 0.9445\n","Iteration: 110 ; Train RMSE = 0.9099 ; Test RMSE = 0.9438\n","Iteration: 120 ; Train RMSE = 0.9073 ; Test RMSE = 0.9428\n","Iteration: 130 ; Train RMSE = 0.9036 ; Test RMSE = 0.9414\n","Iteration: 140 ; Train RMSE = 0.8982 ; Test RMSE = 0.9393\n","Iteration: 150 ; Train RMSE = 0.8909 ; Test RMSE = 0.9364\n","Iteration: 160 ; Train RMSE = 0.8815 ; Test RMSE = 0.9330\n","Iteration: 170 ; Train RMSE = 0.8703 ; Test RMSE = 0.9293\n","Iteration: 180 ; Train RMSE = 0.8577 ; Test RMSE = 0.9257\n","Iteration: 190 ; Train RMSE = 0.8437 ; Test RMSE = 0.9223\n","Iteration: 200 ; Train RMSE = 0.8283 ; Test RMSE = 0.9192\n","Iteration: 210 ; Train RMSE = 0.8113 ; Test RMSE = 0.9164\n","Iteration: 220 ; Train RMSE = 0.7927 ; Test RMSE = 0.9139\n","Iteration: 230 ; Train RMSE = 0.7725 ; Test RMSE = 0.9119\n","Iteration: 240 ; Train RMSE = 0.7510 ; Test RMSE = 0.9104\n","Iteration: 250 ; Train RMSE = 0.7283 ; Test RMSE = 0.9095\n","Iteration: 260 ; Train RMSE = 0.7048 ; Test RMSE = 0.9092\n","Iteration: 270 ; Train RMSE = 0.6808 ; Test RMSE = 0.9094\n","Iteration: 280 ; Train RMSE = 0.6566 ; Test RMSE = 0.9101\n","Iteration: 290 ; Train RMSE = 0.6325 ; Test RMSE = 0.9112\n","Iteration: 300 ; Train RMSE = 0.6086 ; Test RMSE = 0.9126\n","K = 260\n","Iteration: 10 ; Train RMSE = 0.9664 ; Test RMSE = 0.9834\n","Iteration: 20 ; Train RMSE = 0.9420 ; Test RMSE = 0.9645\n","Iteration: 30 ; Train RMSE = 0.9314 ; Test RMSE = 0.9566\n","Iteration: 40 ; Train RMSE = 0.9254 ; Test RMSE = 0.9524\n","Iteration: 50 ; Train RMSE = 0.9215 ; Test RMSE = 0.9497\n","Iteration: 60 ; Train RMSE = 0.9188 ; Test RMSE = 0.9480\n","Iteration: 70 ; Train RMSE = 0.9168 ; Test RMSE = 0.9468\n","Iteration: 80 ; Train RMSE = 0.9151 ; Test RMSE = 0.9459\n","Iteration: 90 ; Train RMSE = 0.9136 ; Test RMSE = 0.9452\n","Iteration: 100 ; Train RMSE = 0.9120 ; Test RMSE = 0.9446\n","Iteration: 110 ; Train RMSE = 0.9101 ; Test RMSE = 0.9438\n","Iteration: 120 ; Train RMSE = 0.9076 ; Test RMSE = 0.9429\n","Iteration: 130 ; Train RMSE = 0.9040 ; Test RMSE = 0.9415\n","Iteration: 140 ; Train RMSE = 0.8989 ; Test RMSE = 0.9396\n","Iteration: 150 ; Train RMSE = 0.8917 ; Test RMSE = 0.9368\n","Iteration: 160 ; Train RMSE = 0.8824 ; Test RMSE = 0.9334\n","Iteration: 170 ; Train RMSE = 0.8713 ; Test RMSE = 0.9296\n","Iteration: 180 ; Train RMSE = 0.8587 ; Test RMSE = 0.9259\n","Iteration: 190 ; Train RMSE = 0.8449 ; Test RMSE = 0.9226\n","Iteration: 200 ; Train RMSE = 0.8298 ; Test RMSE = 0.9195\n","Iteration: 210 ; Train RMSE = 0.8130 ; Test RMSE = 0.9167\n","Iteration: 220 ; Train RMSE = 0.7947 ; Test RMSE = 0.9143\n","Iteration: 230 ; Train RMSE = 0.7747 ; Test RMSE = 0.9123\n","Iteration: 240 ; Train RMSE = 0.7532 ; Test RMSE = 0.9108\n","Iteration: 250 ; Train RMSE = 0.7307 ; Test RMSE = 0.9099\n","Iteration: 260 ; Train RMSE = 0.7072 ; Test RMSE = 0.9095\n","Iteration: 270 ; Train RMSE = 0.6833 ; Test RMSE = 0.9096\n","Iteration: 280 ; Train RMSE = 0.6591 ; Test RMSE = 0.9103\n","Iteration: 290 ; Train RMSE = 0.6349 ; Test RMSE = 0.9113\n","Iteration: 300 ; Train RMSE = 0.6110 ; Test RMSE = 0.9126\n"]}]},{"cell_type":"code","source":["summary = []\n","for i in range(len(results)):\n","    RMSE = []\n","    for result in results[i]:\n","        RMSE.append(result[2])  # 0: K index, 1: learning RMSE, 2: test RMSE\n","\n","    mn = np.min(RMSE)\n","    j = RMSE.index(mn)\n","    summary.append([index[i], j + 1, RMSE[j]])  # [K, idx, RMSE]"],"metadata":{"id":"JGDQSBL4SPm4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","\n","plt.plot(index, [x[2] for x in summary])\n","plt.ylim(0.89, 0.94)\n","plt.xlabel('K')\n","plt.ylabel('RMSE')\n","plt.show()"],"metadata":{"id":"DKiR9fQESQwF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"H1oeZWFPamLV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"nCm3XQNu8wYf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Ga6tZ_1C8wbT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"BddHzxE-8weB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"NoupJz2A8wga"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"5IBVV9Ax8wi0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"kUiCH8-Q8wlX"},"execution_count":null,"outputs":[]}]}